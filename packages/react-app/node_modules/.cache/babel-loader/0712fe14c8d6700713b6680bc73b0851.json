{"ast":null,"code":"var _jsxFileName = \"/Users/pidoxy/bockggames/task-1/challenge-2-token-vendor/packages/react-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport Portis from \"@portis/web3\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { Alert, Button, Card, Col, Divider, Input, List, Menu, Row } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport Authereum from \"authereum\";\nimport { useBalance, useContractLoader, useContractReader, useGasPrice, useOnBlock, useUserProviderAndSigner } from \"eth-hooks\";\nimport { useExchangeEthPrice } from \"eth-hooks/dapps/dex\";\nimport { useEventListener } from \"eth-hooks/events/useEventListener\";\nimport Fortmatic from \"fortmatic\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\"; //import Torus from \"@toruslabs/torus-embed\"\n\nimport WalletLink from \"walletlink\";\nimport Web3Modal from \"web3modal\";\nimport \"./App.css\";\nimport { Account, Address, AddressInput, Balance, Contract, Faucet, GasGauge, Header, Ramp, ThemeSwitch } from \"./components\";\nimport { INFURA_ID, NETWORK, NETWORKS } from \"./constants\";\nimport { Transactor } from \"./helpers\"; // contracts\n\nimport externalContracts from \"./contracts/external_contracts\";\nimport deployedContracts from \"./contracts/hardhat_contracts.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  ethers\n} = require(\"ethers\");\n/*\n    Welcome to üèó scaffold-eth !\n\n    Code:\n    https://github.com/austintgriffith/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    üåè EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n/// üì° What chain are your contracts deployed to?\n\n\nconst targetNetwork = NETWORKS.rinkeby; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n// üò¨ Sorry for all the console logging\n\nconst DEBUG = true;\nconst NETWORKCHECK = true; // üõ∞ providers\n\nif (DEBUG) console.log(\"üì° Connecting to Mainnet Ethereum\"); // const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n//\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\n// Using StaticJsonRpcProvider as the chainId won't change see https://github.com/ethers-io/ethers.js/issues/901\n\nconst scaffoldEthProvider = navigator.onLine ? new ethers.providers.StaticJsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\") : null;\nconst poktMainnetProvider = navigator.onLine ? new ethers.providers.StaticJsonRpcProvider(\"https://eth-mainnet.gateway.pokt.network/v1/lb/611156b4a585a20035148406\") : null;\nconst mainnetInfura = navigator.onLine ? new ethers.providers.StaticJsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID) : null; // ( ‚ö†Ô∏è Getting \"failed to meet quorum\" errors? Check your INFURA_ID\n// üè† Your local provider is usually pointed at your local blockchain\n\nconst localProviderUrl = targetNetwork.rpcUrl; // as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\n\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nif (DEBUG) console.log(\"üè† Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new ethers.providers.StaticJsonRpcProvider(localProviderUrlFromEnv); // üî≠ block explorer URL\n\nconst blockExplorer = targetNetwork.blockExplorer; // Coinbase walletLink init\n\nconst walletLink = new WalletLink({\n  appName: \"coinbase\"\n}); // WalletLink provider\n\nconst walletLinkProvider = walletLink.makeWeb3Provider(`https://mainnet.infura.io/v3/${INFURA_ID}`, 1); // Portis ID: 6255fb2b-58c8-433b-a2c9-62098c05ddc9\n\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\n\nconst web3Modal = new Web3Modal({\n  network: \"mainnet\",\n  // Optional. If using WalletConnect on xDai, change network to \"xdai\" and add RPC info below for xDai chain.\n  cacheProvider: true,\n  // optional\n  theme: \"light\",\n  // optional. Change to \"dark\" for a dark theme.\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      // required\n      options: {\n        bridge: \"https://polygon.bridge.walletconnect.org\",\n        infuraId: INFURA_ID,\n        rpc: {\n          1: `https://mainnet.infura.io/v3/${INFURA_ID}`,\n          // mainnet // For more WalletConnect providers: https://docs.walletconnect.org/quick-start/dapps/web3-provider#required\n          42: `https://kovan.infura.io/v3/${INFURA_ID}`,\n          100: \"https://dai.poa.network\" // xDai\n\n        }\n      }\n    },\n    portis: {\n      display: {\n        logo: \"https://user-images.githubusercontent.com/9419140/128913641-d025bc0c-e059-42de-a57b-422f196867ce.png\",\n        name: \"Portis\",\n        description: \"Connect to Portis App\"\n      },\n      package: Portis,\n      options: {\n        id: \"6255fb2b-58c8-433b-a2c9-62098c05ddc9\"\n      }\n    },\n    fortmatic: {\n      package: Fortmatic,\n      // required\n      options: {\n        key: \"pk_live_5A7C91B2FC585A17\" // required\n\n      }\n    },\n    // torus: {\n    //   package: Torus,\n    //   options: {\n    //     networkParams: {\n    //       host: \"https://localhost:8545\", // optional\n    //       chainId: 1337, // optional\n    //       networkId: 1337 // optional\n    //     },\n    //     config: {\n    //       buildEnv: \"development\" // optional\n    //     },\n    //   },\n    // },\n    \"custom-walletlink\": {\n      display: {\n        logo: \"https://play-lh.googleusercontent.com/PjoJoG27miSglVBXoXrxBSLveV6e3EeBPpNY55aiUUBM9Q1RCETKCOqdOkX2ZydqVf0\",\n        name: \"Coinbase\",\n        description: \"Connect to Coinbase Wallet (not Coinbase App)\"\n      },\n      package: walletLinkProvider,\n      connector: async (provider, _options) => {\n        await provider.enable();\n        return provider;\n      }\n    },\n    authereum: {\n      package: Authereum // required\n\n    }\n  }\n});\n\nfunction App(props) {\n  _s();\n\n  const mainnetProvider = poktMainnetProvider && poktMainnetProvider._isProvider ? poktMainnetProvider : scaffoldEthProvider && scaffoldEthProvider._network ? scaffoldEthProvider : mainnetInfura;\n  const [injectedProvider, setInjectedProvider] = useState();\n  const [address, setAddress] = useState();\n\n  const logoutOfWeb3Modal = async () => {\n    await web3Modal.clearCachedProvider();\n\n    if (injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect == \"function\") {\n      await injectedProvider.provider.disconnect();\n    }\n\n    setTimeout(() => {\n      window.location.reload();\n    }, 1);\n  };\n  /* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */\n\n\n  const price = useExchangeEthPrice(targetNetwork, mainnetProvider);\n  /* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */\n\n  const gasPrice = useGasPrice(targetNetwork, \"fast\"); // Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\n\n  const userProviderAndSigner = useUserProviderAndSigner(injectedProvider, localProvider);\n  const userSigner = userProviderAndSigner.signer;\n  useEffect(() => {\n    async function getAddress() {\n      if (userSigner) {\n        const newAddress = await userSigner.getAddress();\n        setAddress(newAddress);\n      }\n    }\n\n    getAddress();\n  }, [userSigner]); // You can warn the user if you would like them to be on a specific network\n\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  const selectedChainId = userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId; // For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n  // The transactor wraps transactions and provides notificiations\n\n  const tx = Transactor(userSigner, gasPrice); // Faucet Tx can be used to send funds from the faucet\n\n  const faucetTx = Transactor(localProvider, gasPrice); // üèó scaffold-eth is full of handy hooks like this one to get your balance:\n\n  const yourLocalBalance = useBalance(localProvider, address); // Just plug in different üõ∞ providers to get your balance on different chains:\n\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\n  const contractConfig = {\n    deployedContracts: deployedContracts || {},\n    externalContracts: externalContracts || {}\n  }; // Load in your local üìù contract and read a value from it:\n\n  const readContracts = useContractLoader(localProvider, contractConfig); // If you want to make üîê write transactions to your contracts, use the userSigner:\n\n  const writeContracts = useContractLoader(userSigner, contractConfig, localChainId); // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n\n  const mainnetContracts = useContractLoader(mainnetProvider, contractConfig); // If you want to call a function on a new block\n\n  useOnBlock(mainnetProvider, () => {\n    console.log(`‚õì A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\n  }); // Then read your DAI balance like:\n\n  const myMainnetDAIBalance = useContractReader(mainnetContracts, \"DAI\", \"balanceOf\", [\"0x34aA3F359A9D614239015126635CE7732c18fDF3\"]);\n  const vendorAddress = readContracts && readContracts.Vendor && readContracts.Vendor.address;\n  const vendorETHBalance = useBalance(localProvider, vendorAddress);\n  if (DEBUG) console.log(\"üíµ vendorETHBalance\", vendorETHBalance ? ethers.utils.formatEther(vendorETHBalance) : \"...\");\n  const vendorApproval = useContractReader(readContracts, \"YourToken\", \"allowance\", [address, vendorAddress]);\n  console.log(\"ü§è vendorApproval\", vendorApproval);\n  const vendorTokenBalance = useContractReader(readContracts, \"YourToken\", \"balanceOf\", [vendorAddress]);\n  console.log(\"üèµ vendorTokenBalance:\", vendorTokenBalance ? ethers.utils.formatEther(vendorTokenBalance) : \"...\");\n  const yourTokenBalance = useContractReader(readContracts, \"YourToken\", \"balanceOf\", [address]);\n  console.log(\"üèµ yourTokenBalance:\", yourTokenBalance ? ethers.utils.formatEther(yourTokenBalance) : \"...\");\n  const tokensPerEth = useContractReader(readContracts, \"Vendor\", \"tokensPerEth\");\n  console.log(\"üè¶ tokensPerEth:\", tokensPerEth ? tokensPerEth.toString() : \"...\"); // const complete = useContractReader(readContracts,\"ExampleExternalContract\", \"completed\")\n  // console.log(\"‚úÖ complete:\",complete)\n  //\n  // const exampleExternalContractBalance = useBalance(localProvider, readContracts && readContracts.ExampleExternalContract.address);\n  // if(DEBUG) console.log(\"üíµ exampleExternalContractBalance\", exampleExternalContractBalance )\n  // let completeDisplay = \"\"\n  // if(false){\n  //   completeDisplay = (\n  //     <div style={{padding:64, backgroundColor:\"#eeffef\", fontWeight:\"bolder\"}}>\n  //       üöÄ üéñ üë©‚ÄçüöÄ  -  Staking App triggered `ExampleExternalContract` -- üéâ  üçæ   üéä\n  //       <Balance\n  //         balance={0}\n  //         fontSize={64}\n  //       /> ETH staked!\n  //     </div>\n  //   )\n  // }\n\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"üè∑ Resolved austingriffith.eth as:\",addressFromENS)\n  */\n  //\n  // üß´ DEBUG üë®üèª‚Äçüî¨\n  //\n\n  useEffect(() => {\n    if (DEBUG && mainnetProvider && address && selectedChainId && yourLocalBalance && yourMainnetBalance && readContracts && writeContracts && mainnetContracts) {\n      console.log(\"_____________________________________ üèó scaffold-eth _____________________________________\");\n      console.log(\"üåé mainnetProvider\", mainnetProvider);\n      console.log(\"üè† localChainId\", localChainId);\n      console.log(\"üë©‚Äçüíº selected address:\", address);\n      console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\", selectedChainId);\n      console.log(\"üíµ yourLocalBalance\", yourLocalBalance ? ethers.utils.formatEther(yourLocalBalance) : \"...\");\n      console.log(\"üíµ yourMainnetBalance\", yourMainnetBalance ? ethers.utils.formatEther(yourMainnetBalance) : \"...\");\n      console.log(\"üìù readContracts\", readContracts);\n      console.log(\"üåç DAI contract on mainnet:\", mainnetContracts);\n      console.log(\"üíµ yourMainnetDAIBalance\", myMainnetDAIBalance);\n      console.log(\"üîê writeContracts\", writeContracts);\n    }\n  }, [mainnetProvider, address, selectedChainId, yourLocalBalance, yourMainnetBalance, readContracts, writeContracts, mainnetContracts]);\n  let networkDisplay = \"\";\n\n  if (NETWORKCHECK && localChainId && selectedChainId && localChainId !== selectedChainId) {\n    const networkSelected = NETWORK(selectedChainId);\n    const networkLocal = NETWORK(localChainId);\n\n    if (selectedChainId === 1337 && localChainId === 31337) {\n      networkDisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          zIndex: 2,\n          position: \"absolute\",\n          right: 0,\n          top: 60,\n          padding: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          message: \"\\u26A0\\uFE0F Wrong Network ID\",\n          description: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"You have \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"chain id 1337\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 26\n            }, this), \" for localhost and you need to change it to \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"31337\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 90\n            }, this), \" to work with HardHat.\", /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"(MetaMask -> Settings -> Networks -> Chain ID -> 31337)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this),\n          type: \"error\",\n          closable: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this);\n    } else {\n      networkDisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          zIndex: 2,\n          position: \"absolute\",\n          right: 0,\n          top: 60,\n          padding: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          message: \"\\u26A0\\uFE0F Wrong Network\",\n          description: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"You have \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: networkSelected && networkSelected.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 26\n            }, this), \" selected and you need to be on\", \" \", /*#__PURE__*/_jsxDEV(Button, {\n              onClick: async () => {\n                const ethereum = window.ethereum;\n                const data = [{\n                  chainId: \"0x\" + targetNetwork.chainId.toString(16),\n                  chainName: targetNetwork.name,\n                  nativeCurrency: targetNetwork.nativeCurrency,\n                  rpcUrls: [targetNetwork.rpcUrl],\n                  blockExplorerUrls: [targetNetwork.blockExplorer]\n                }];\n                console.log(\"data\", data);\n                let switchTx; // https://docs.metamask.io/guide/rpc-api.html#other-rpc-methods\n\n                try {\n                  switchTx = await ethereum.request({\n                    method: \"wallet_switchEthereumChain\",\n                    params: [{\n                      chainId: data[0].chainId\n                    }]\n                  });\n                } catch (switchError) {\n                  // not checking specific error code, because maybe we're not using MetaMask\n                  try {\n                    switchTx = await ethereum.request({\n                      method: \"wallet_addEthereumChain\",\n                      params: data\n                    });\n                  } catch (addError) {// handle \"add\" error\n                  }\n                }\n\n                if (switchTx) {\n                  console.log(switchTx);\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: networkLocal && networkLocal.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this),\n          type: \"error\",\n          closable: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this);\n    }\n  } else {\n    networkDisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        zIndex: -1,\n        position: \"absolute\",\n        right: 154,\n        top: 28,\n        padding: 16,\n        color: targetNetwork.color\n      },\n      children: targetNetwork.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 7\n    }, this);\n  }\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    provider.on(\"chainChanged\", chainId => {\n      console.log(`chain changed to ${chainId}! updating providers`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n    provider.on(\"accountsChanged\", () => {\n      console.log(`account changed!`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    }); // Subscribe to session disconnection\n\n    provider.on(\"disconnect\", (code, reason) => {\n      console.log(code, reason);\n      logoutOfWeb3Modal();\n    });\n  }, [setInjectedProvider]);\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    setRoute(window.location.pathname);\n  }, [setRoute]);\n  let faucetHint = \"\";\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name.indexOf(\"local\") !== -1;\n  const [faucetClicked, setFaucetClicked] = useState(false);\n\n  if (!faucetClicked && localProvider && localProvider._network && localProvider._network.chainId === 31337 && yourLocalBalance && ethers.utils.formatEther(yourLocalBalance) <= 0) {\n    faucetHint = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => {\n          faucetTx({\n            to: address,\n            value: ethers.utils.parseEther(\"1\")\n          });\n          setFaucetClicked(true);\n        },\n        children: \"\\uD83D\\uDCB0 Grab funds from the faucet \\u26FD\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 7\n    }, this);\n  }\n\n  const buyTokensEvents = useEventListener(readContracts, \"Vendor\", \"BuyTokens\", localProvider, 1);\n  console.log(\"üìü buyTokensEvents:\", buyTokensEvents);\n  const [tokenBuyAmount, setTokenBuyAmount] = useState({\n    valid: false,\n    value: ''\n  });\n  const [tokenSellAmount, setTokenSellAmount] = useState({\n    valid: false,\n    value: ''\n  });\n  const [isSellAmountApproved, setIsSellAmountApproved] = useState();\n  useEffect(() => {\n    console.log(\"tokenSellAmount\", tokenSellAmount.value);\n    const tokenSellAmountBN = tokenSellAmount.valid ? ethers.utils.parseEther(\"\" + tokenSellAmount.value) : 0;\n    console.log(\"tokenSellAmountBN\", tokenSellAmountBN);\n    setIsSellAmountApproved(vendorApproval && tokenSellAmount.value && vendorApproval.gte(tokenSellAmountBN));\n  }, [tokenSellAmount, readContracts]);\n  console.log(\"isSellAmountApproved\", isSellAmountApproved);\n  const ethCostToPurchaseTokens = tokenBuyAmount.valid && tokensPerEth && ethers.utils.parseEther(\"\" + tokenBuyAmount.value / parseFloat(tokensPerEth));\n  console.log(\"ethCostToPurchaseTokens:\", ethCostToPurchaseTokens);\n  const ethValueToSellTokens = tokenSellAmount.valid && tokensPerEth && ethers.utils.parseEther(\"\" + tokenSellAmount.value / parseFloat(tokensPerEth));\n  console.log(\"ethValueToSellTokens:\", ethValueToSellTokens);\n  const [tokenSendToAddress, setTokenSendToAddress] = useState();\n  const [tokenSendAmount, setTokenSendAmount] = useState();\n  const [buying, setBuying] = useState();\n  let transferDisplay = \"\";\n\n  if (yourTokenBalance) {\n    transferDisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 8,\n        marginTop: 32,\n        width: 420,\n        margin: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        title: \"Transfer tokens\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: 8\n            },\n            children: /*#__PURE__*/_jsxDEV(AddressInput, {\n              ensProvider: mainnetProvider,\n              placeholder: \"to address\",\n              value: tokenSendToAddress,\n              onChange: setTokenSendToAddress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: 8\n            },\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              style: {\n                textAlign: \"center\"\n              },\n              placeholder: \"amount of tokens to send\",\n              value: tokenSendAmount,\n              onChange: e => {\n                setTokenSendAmount(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: () => {\n              tx(writeContracts.YourToken.transfer(tokenSendToAddress, ethers.utils.parseEther(\"\" + tokenSendAmount)));\n            },\n            children: \"Send Tokens\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 7\n    }, this), networkDisplay, /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Menu, {\n        style: {\n          textAlign: \"center\"\n        },\n        selectedKeys: [route],\n        mode: \"horizontal\",\n        children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => {\n              setRoute(\"/\");\n            },\n            to: \"/\",\n            children: \"YourToken\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 13\n          }, this)\n        }, \"/\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => {\n              setRoute(\"/contracts\");\n            },\n            to: \"/contracts\",\n            children: \"Debug Contracts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 13\n          }, this)\n        }, \"/contracts\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: 8,\n              marginTop: 32,\n              width: 300,\n              margin: \"auto\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              title: \"Your Tokens\",\n              extra: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                children: \"code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 48\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  padding: 8\n                },\n                children: /*#__PURE__*/_jsxDEV(Balance, {\n                  balance: yourTokenBalance,\n                  fontSize: 64\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 596,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 595,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 13\n          }, this), transferDisplay, /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: 8,\n              marginTop: 32,\n              width: 300,\n              margin: \"auto\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              title: \"Buy Tokens\",\n              extra: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                children: \"code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 603,\n                columnNumber: 47\n              }, this),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  padding: 8\n                },\n                children: [tokensPerEth && tokensPerEth.toNumber(), \" tokens per ETH\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  padding: 8\n                },\n                children: [/*#__PURE__*/_jsxDEV(Input, {\n                  style: {\n                    textAlign: \"center\"\n                  },\n                  placeholder: \"amount of tokens to buy\",\n                  value: tokenBuyAmount.value,\n                  onChange: e => {\n                    const newValue = e.target.value.startsWith(\".\") ? \"0.\" : e.target.value;\n                    const buyAmount = {\n                      value: newValue,\n                      valid: /^\\d*\\.?\\d+$/.test(newValue)\n                    };\n                    setTokenBuyAmount(buyAmount);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Balance, {\n                  balance: ethCostToPurchaseTokens,\n                  dollarMultiplier: price\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 619,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  padding: 8\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"primary\",\n                  loading: buying,\n                  onClick: async () => {\n                    setBuying(true);\n                    await tx(writeContracts.Vendor.buyTokens({\n                      value: ethCostToPurchaseTokens\n                    }));\n                    setBuying(false);\n                  },\n                  disabled: !tokenBuyAmount.valid,\n                  children: \"Buy Tokens\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 623,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 622,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: 8,\n              marginTop: 32\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Vendor Token Balance:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 720,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Balance, {\n              balance: vendorTokenBalance,\n              fontSize: 64\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 721,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 719,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: 8\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Vendor ETH Balance:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Balance, {\n              balance: vendorETHBalance,\n              fontSize: 64\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 726,\n              columnNumber: 15\n            }, this), \" ETH\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: 500,\n              margin: \"auto\",\n              marginTop: 64\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Buy Token Events:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              dataSource: buyTokensEvents,\n              renderItem: item => {\n                return /*#__PURE__*/_jsxDEV(List.Item, {\n                  children: [/*#__PURE__*/_jsxDEV(Address, {\n                    value: item.args[0],\n                    ensProvider: mainnetProvider,\n                    fontSize: 16\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 736,\n                    columnNumber: 23\n                  }, this), \" paid\", /*#__PURE__*/_jsxDEV(Balance, {\n                    balance: item.args[1]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 737,\n                    columnNumber: 23\n                  }, this), \"ETH to get\", /*#__PURE__*/_jsxDEV(Balance, {\n                    balance: item.args[2]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 739,\n                    columnNumber: 23\n                  }, this), \"Tokens\"]\n                }, item.blockNumber + item.blockHash, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 735,\n                  columnNumber: 21\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 731,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/contracts\",\n          children: [/*#__PURE__*/_jsxDEV(Contract, {\n            name: \"Vendor\",\n            signer: userSigner,\n            provider: localProvider,\n            address: address,\n            blockExplorer: blockExplorer,\n            contractConfig: contractConfig\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Contract, {\n            name: \"YourToken\",\n            signer: userSigner,\n            provider: localProvider,\n            address: address,\n            blockExplorer: blockExplorer,\n            contractConfig: contractConfig\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 772,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 763,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThemeSwitch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 784,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        textAlign: \"right\",\n        right: 0,\n        top: 0,\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(Account, {\n        address: address,\n        localProvider: localProvider,\n        userSigner: userSigner,\n        mainnetProvider: mainnetProvider,\n        price: price,\n        web3Modal: web3Modal,\n        loadWeb3Modal: loadWeb3Modal,\n        logoutOfWeb3Modal: logoutOfWeb3Modal,\n        blockExplorer: blockExplorer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 788,\n        columnNumber: 9\n      }, this), faucetHint]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 787,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 32,\n        opacity: 0.5\n      },\n      children: [\"Created by \", /*#__PURE__*/_jsxDEV(Address, {\n        value: \"Your...address\",\n        ensProvider: mainnetProvider,\n        fontSize: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 803,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 802,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 32,\n        paddingBottom: 128,\n        opacity: 0.5\n      },\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        target: \"_blank\",\n        style: {\n          padding: 32,\n          color: \"#000\"\n        },\n        href: \"https://github.com/austintgriffith/scaffold-eth\",\n        children: \"\\uD83C\\uDF74 Fork me!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 807,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 806,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        textAlign: \"left\",\n        left: 0,\n        bottom: 20,\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        align: \"middle\",\n        gutter: [4, 4],\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          children: /*#__PURE__*/_jsxDEV(Ramp, {\n            price: price,\n            address: address,\n            networks: NETWORKS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 820,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 819,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          style: {\n            textAlign: \"center\",\n            opacity: 0.8\n          },\n          children: /*#__PURE__*/_jsxDEV(GasGauge, {\n            gasPrice: gasPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 824,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          style: {\n            textAlign: \"center\",\n            opacity: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n            },\n            size: \"large\",\n            shape: \"round\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginRight: 8\n              },\n              role: \"img\",\n              \"aria-label\": \"support\",\n              children: \"\\uD83D\\uDCAC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 834,\n              columnNumber: 15\n            }, this), \"Support\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 818,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        align: \"middle\",\n        gutter: [4, 4],\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          span: 24,\n          children:\n          /*  if the local provider has a signer, let's show the faucet:  */\n          faucetAvailable ? /*#__PURE__*/_jsxDEV(Faucet, {\n            localProvider: localProvider,\n            price: price,\n            ensProvider: mainnetProvider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 847,\n            columnNumber: 17\n          }, this) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 843,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 842,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 817,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 563,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"PSFXM5FA9yLvmWxSXl8n+cUp0y0=\", false, function () {\n  return [useExchangeEthPrice, useGasPrice, useUserProviderAndSigner, useBalance, useBalance, useContractLoader, useContractLoader, useContractLoader, useOnBlock, useContractReader, useBalance, useContractReader, useContractReader, useContractReader, useContractReader, useEventListener];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/pidoxy/bockggames/task-1/challenge-2-token-vendor/packages/react-app/src/App.jsx"],"names":["Portis","WalletConnectProvider","Alert","Button","Card","Col","Divider","Input","List","Menu","Row","Authereum","useBalance","useContractLoader","useContractReader","useGasPrice","useOnBlock","useUserProviderAndSigner","useExchangeEthPrice","useEventListener","Fortmatic","React","useCallback","useEffect","useState","BrowserRouter","Link","Route","Switch","WalletLink","Web3Modal","Account","Address","AddressInput","Balance","Contract","Faucet","GasGauge","Header","Ramp","ThemeSwitch","INFURA_ID","NETWORK","NETWORKS","Transactor","externalContracts","deployedContracts","ethers","require","targetNetwork","rinkeby","DEBUG","NETWORKCHECK","console","log","scaffoldEthProvider","navigator","onLine","providers","StaticJsonRpcProvider","poktMainnetProvider","mainnetInfura","localProviderUrl","rpcUrl","localProviderUrlFromEnv","process","env","REACT_APP_PROVIDER","localProvider","blockExplorer","walletLink","appName","walletLinkProvider","makeWeb3Provider","web3Modal","network","cacheProvider","theme","providerOptions","walletconnect","package","options","bridge","infuraId","rpc","portis","display","logo","name","description","id","fortmatic","key","connector","provider","_options","enable","authereum","App","props","mainnetProvider","_isProvider","_network","injectedProvider","setInjectedProvider","address","setAddress","logoutOfWeb3Modal","clearCachedProvider","disconnect","setTimeout","window","location","reload","price","gasPrice","userProviderAndSigner","userSigner","signer","getAddress","newAddress","localChainId","chainId","selectedChainId","tx","faucetTx","yourLocalBalance","yourMainnetBalance","contractConfig","readContracts","writeContracts","mainnetContracts","_lastBlockNumber","myMainnetDAIBalance","vendorAddress","Vendor","vendorETHBalance","utils","formatEther","vendorApproval","vendorTokenBalance","yourTokenBalance","tokensPerEth","toString","networkDisplay","networkSelected","networkLocal","zIndex","position","right","top","padding","ethereum","data","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","switchTx","request","method","params","switchError","addError","color","loadWeb3Modal","connect","Web3Provider","on","code","reason","cachedProvider","route","setRoute","pathname","faucetHint","faucetAvailable","connection","indexOf","faucetClicked","setFaucetClicked","to","value","parseEther","buyTokensEvents","tokenBuyAmount","setTokenBuyAmount","valid","tokenSellAmount","setTokenSellAmount","isSellAmountApproved","setIsSellAmountApproved","tokenSellAmountBN","gte","ethCostToPurchaseTokens","parseFloat","ethValueToSellTokens","tokenSendToAddress","setTokenSendToAddress","tokenSendAmount","setTokenSendAmount","buying","setBuying","transferDisplay","marginTop","width","margin","textAlign","e","target","YourToken","transfer","toNumber","newValue","startsWith","buyAmount","test","buyTokens","item","args","blockNumber","blockHash","opacity","paddingBottom","left","bottom","open","marginRight"],"mappings":"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","sourcesContent":["import Portis from \"@portis/web3\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { Alert, Button, Card, Col, Divider, Input, List, Menu, Row } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport Authereum from \"authereum\";\nimport {\n  useBalance,\n  useContractLoader,\n  useContractReader,\n  useGasPrice,\n  useOnBlock,\n  useUserProviderAndSigner,\n} from \"eth-hooks\";\nimport { useExchangeEthPrice } from \"eth-hooks/dapps/dex\";\nimport { useEventListener } from \"eth-hooks/events/useEventListener\";\nimport Fortmatic from \"fortmatic\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\n//import Torus from \"@toruslabs/torus-embed\"\nimport WalletLink from \"walletlink\";\nimport Web3Modal from \"web3modal\";\nimport \"./App.css\";\nimport {\n  Account,\n  Address,\n  AddressInput,\n  Balance,\n  Contract,\n  Faucet,\n  GasGauge,\n  Header,\n  Ramp,\n  ThemeSwitch,\n} from \"./components\";\nimport { INFURA_ID, NETWORK, NETWORKS } from \"./constants\";\nimport { Transactor } from \"./helpers\";\n\n// contracts\nimport externalContracts from \"./contracts/external_contracts\";\nimport deployedContracts from \"./contracts/hardhat_contracts.json\";\n\nconst { ethers } = require(\"ethers\");\n/*\n    Welcome to üèó scaffold-eth !\n\n    Code:\n    https://github.com/austintgriffith/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    üåè EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n\n/// üì° What chain are your contracts deployed to?\nconst targetNetwork = NETWORKS.rinkeby; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n\n// üò¨ Sorry for all the console logging\nconst DEBUG = true;\nconst NETWORKCHECK = true;\n\n// üõ∞ providers\nif (DEBUG) console.log(\"üì° Connecting to Mainnet Ethereum\");\n// const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n//\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\n// Using StaticJsonRpcProvider as the chainId won't change see https://github.com/ethers-io/ethers.js/issues/901\nconst scaffoldEthProvider = navigator.onLine\n  ? new ethers.providers.StaticJsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\")\n  : null;\nconst poktMainnetProvider = navigator.onLine\n  ? new ethers.providers.StaticJsonRpcProvider(\n      \"https://eth-mainnet.gateway.pokt.network/v1/lb/611156b4a585a20035148406\",\n    )\n  : null;\nconst mainnetInfura = navigator.onLine\n  ? new ethers.providers.StaticJsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID)\n  : null;\n// ( ‚ö†Ô∏è Getting \"failed to meet quorum\" errors? Check your INFURA_ID\n\n// üè† Your local provider is usually pointed at your local blockchain\nconst localProviderUrl = targetNetwork.rpcUrl;\n// as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nif (DEBUG) console.log(\"üè† Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new ethers.providers.StaticJsonRpcProvider(localProviderUrlFromEnv);\n\n// üî≠ block explorer URL\nconst blockExplorer = targetNetwork.blockExplorer;\n\n// Coinbase walletLink init\nconst walletLink = new WalletLink({\n  appName: \"coinbase\",\n});\n\n// WalletLink provider\nconst walletLinkProvider = walletLink.makeWeb3Provider(`https://mainnet.infura.io/v3/${INFURA_ID}`, 1);\n\n// Portis ID: 6255fb2b-58c8-433b-a2c9-62098c05ddc9\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\nconst web3Modal = new Web3Modal({\n  network: \"mainnet\", // Optional. If using WalletConnect on xDai, change network to \"xdai\" and add RPC info below for xDai chain.\n  cacheProvider: true, // optional\n  theme: \"light\", // optional. Change to \"dark\" for a dark theme.\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        bridge: \"https://polygon.bridge.walletconnect.org\",\n        infuraId: INFURA_ID,\n        rpc: {\n          1: `https://mainnet.infura.io/v3/${INFURA_ID}`, // mainnet // For more WalletConnect providers: https://docs.walletconnect.org/quick-start/dapps/web3-provider#required\n          42: `https://kovan.infura.io/v3/${INFURA_ID}`,\n          100: \"https://dai.poa.network\", // xDai\n        },\n      },\n    },\n    portis: {\n      display: {\n        logo: \"https://user-images.githubusercontent.com/9419140/128913641-d025bc0c-e059-42de-a57b-422f196867ce.png\",\n        name: \"Portis\",\n        description: \"Connect to Portis App\",\n      },\n      package: Portis,\n      options: {\n        id: \"6255fb2b-58c8-433b-a2c9-62098c05ddc9\",\n      },\n    },\n    fortmatic: {\n      package: Fortmatic, // required\n      options: {\n        key: \"pk_live_5A7C91B2FC585A17\", // required\n      },\n    },\n    // torus: {\n    //   package: Torus,\n    //   options: {\n    //     networkParams: {\n    //       host: \"https://localhost:8545\", // optional\n    //       chainId: 1337, // optional\n    //       networkId: 1337 // optional\n    //     },\n    //     config: {\n    //       buildEnv: \"development\" // optional\n    //     },\n    //   },\n    // },\n    \"custom-walletlink\": {\n      display: {\n        logo: \"https://play-lh.googleusercontent.com/PjoJoG27miSglVBXoXrxBSLveV6e3EeBPpNY55aiUUBM9Q1RCETKCOqdOkX2ZydqVf0\",\n        name: \"Coinbase\",\n        description: \"Connect to Coinbase Wallet (not Coinbase App)\",\n      },\n      package: walletLinkProvider,\n      connector: async (provider, _options) => {\n        await provider.enable();\n        return provider;\n      },\n    },\n    authereum: {\n      package: Authereum, // required\n    },\n  },\n});\n\nfunction App(props) {\n  const mainnetProvider =\n    poktMainnetProvider && poktMainnetProvider._isProvider\n      ? poktMainnetProvider\n      : scaffoldEthProvider && scaffoldEthProvider._network\n      ? scaffoldEthProvider\n      : mainnetInfura;\n\n  const [injectedProvider, setInjectedProvider] = useState();\n  const [address, setAddress] = useState();\n\n  const logoutOfWeb3Modal = async () => {\n    await web3Modal.clearCachedProvider();\n    if (injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect == \"function\") {\n      await injectedProvider.provider.disconnect();\n    }\n    setTimeout(() => {\n      window.location.reload();\n    }, 1);\n  };\n\n  /* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */\n  const price = useExchangeEthPrice(targetNetwork, mainnetProvider);\n\n  /* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */\n  const gasPrice = useGasPrice(targetNetwork, \"fast\");\n  // Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\n  const userProviderAndSigner = useUserProviderAndSigner(injectedProvider, localProvider);\n  const userSigner = userProviderAndSigner.signer;\n\n  useEffect(() => {\n    async function getAddress() {\n      if (userSigner) {\n        const newAddress = await userSigner.getAddress();\n        setAddress(newAddress);\n      }\n    }\n    getAddress();\n  }, [userSigner]);\n\n  // You can warn the user if you would like them to be on a specific network\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  const selectedChainId =\n    userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId;\n\n  // For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n\n  // The transactor wraps transactions and provides notificiations\n  const tx = Transactor(userSigner, gasPrice);\n\n  // Faucet Tx can be used to send funds from the faucet\n  const faucetTx = Transactor(localProvider, gasPrice);\n\n  // üèó scaffold-eth is full of handy hooks like this one to get your balance:\n  const yourLocalBalance = useBalance(localProvider, address);\n\n  // Just plug in different üõ∞ providers to get your balance on different chains:\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\n\n  const contractConfig = { deployedContracts: deployedContracts || {}, externalContracts: externalContracts || {} };\n\n  // Load in your local üìù contract and read a value from it:\n  const readContracts = useContractLoader(localProvider, contractConfig);\n\n  // If you want to make üîê write transactions to your contracts, use the userSigner:\n  const writeContracts = useContractLoader(userSigner, contractConfig, localChainId);\n\n  // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n  const mainnetContracts = useContractLoader(mainnetProvider, contractConfig);\n\n  // If you want to call a function on a new block\n  useOnBlock(mainnetProvider, () => {\n    console.log(`‚õì A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\n  });\n\n  // Then read your DAI balance like:\n  const myMainnetDAIBalance = useContractReader(mainnetContracts, \"DAI\", \"balanceOf\", [\n    \"0x34aA3F359A9D614239015126635CE7732c18fDF3\",\n  ]);\n\n  const vendorAddress = readContracts && readContracts.Vendor && readContracts.Vendor.address;\n\n  const vendorETHBalance = useBalance(localProvider, vendorAddress);\n  if (DEBUG) console.log(\"üíµ vendorETHBalance\", vendorETHBalance ? ethers.utils.formatEther(vendorETHBalance) : \"...\");\n\n  const vendorApproval = useContractReader(readContracts, \"YourToken\", \"allowance\", [\n    address, vendorAddress\n  ]);\n  console.log(\"ü§è vendorApproval\",vendorApproval)\n\n  const vendorTokenBalance = useContractReader(readContracts, \"YourToken\", \"balanceOf\", [vendorAddress]);\n  console.log(\"üèµ vendorTokenBalance:\", vendorTokenBalance ? ethers.utils.formatEther(vendorTokenBalance) : \"...\");\n\n  const yourTokenBalance = useContractReader(readContracts, \"YourToken\", \"balanceOf\", [address]);\n  console.log(\"üèµ yourTokenBalance:\", yourTokenBalance ? ethers.utils.formatEther(yourTokenBalance) : \"...\");\n\n  const tokensPerEth = useContractReader(readContracts, \"Vendor\", \"tokensPerEth\");\n  console.log(\"üè¶ tokensPerEth:\", tokensPerEth ? tokensPerEth.toString() : \"...\");\n\n  // const complete = useContractReader(readContracts,\"ExampleExternalContract\", \"completed\")\n  // console.log(\"‚úÖ complete:\",complete)\n  //\n  // const exampleExternalContractBalance = useBalance(localProvider, readContracts && readContracts.ExampleExternalContract.address);\n  // if(DEBUG) console.log(\"üíµ exampleExternalContractBalance\", exampleExternalContractBalance )\n\n  // let completeDisplay = \"\"\n  // if(false){\n  //   completeDisplay = (\n  //     <div style={{padding:64, backgroundColor:\"#eeffef\", fontWeight:\"bolder\"}}>\n  //       üöÄ üéñ üë©‚ÄçüöÄ  -  Staking App triggered `ExampleExternalContract` -- üéâ  üçæ   üéä\n  //       <Balance\n  //         balance={0}\n  //         fontSize={64}\n  //       /> ETH staked!\n  //     </div>\n  //   )\n  // }\n\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"üè∑ Resolved austingriffith.eth as:\",addressFromENS)\n  */\n\n  //\n  // üß´ DEBUG üë®üèª‚Äçüî¨\n  //\n  useEffect(() => {\n    if (\n      DEBUG &&\n      mainnetProvider &&\n      address &&\n      selectedChainId &&\n      yourLocalBalance &&\n      yourMainnetBalance &&\n      readContracts &&\n      writeContracts &&\n      mainnetContracts\n    ) {\n      console.log(\"_____________________________________ üèó scaffold-eth _____________________________________\");\n      console.log(\"üåé mainnetProvider\", mainnetProvider);\n      console.log(\"üè† localChainId\", localChainId);\n      console.log(\"üë©‚Äçüíº selected address:\", address);\n      console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\", selectedChainId);\n      console.log(\"üíµ yourLocalBalance\", yourLocalBalance ? ethers.utils.formatEther(yourLocalBalance) : \"...\");\n      console.log(\"üíµ yourMainnetBalance\", yourMainnetBalance ? ethers.utils.formatEther(yourMainnetBalance) : \"...\");\n      console.log(\"üìù readContracts\", readContracts);\n      console.log(\"üåç DAI contract on mainnet:\", mainnetContracts);\n      console.log(\"üíµ yourMainnetDAIBalance\", myMainnetDAIBalance);\n      console.log(\"üîê writeContracts\", writeContracts);\n    }\n  }, [\n    mainnetProvider,\n    address,\n    selectedChainId,\n    yourLocalBalance,\n    yourMainnetBalance,\n    readContracts,\n    writeContracts,\n    mainnetContracts,\n  ]);\n\n  let networkDisplay = \"\";\n  if (NETWORKCHECK && localChainId && selectedChainId && localChainId !== selectedChainId) {\n    const networkSelected = NETWORK(selectedChainId);\n    const networkLocal = NETWORK(localChainId);\n    if (selectedChainId === 1337 && localChainId === 31337) {\n      networkDisplay = (\n        <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\n          <Alert\n            message=\"‚ö†Ô∏è Wrong Network ID\"\n            description={\n              <div>\n                You have <b>chain id 1337</b> for localhost and you need to change it to <b>31337</b> to work with\n                HardHat.\n                <div>(MetaMask -&gt; Settings -&gt; Networks -&gt; Chain ID -&gt; 31337)</div>\n              </div>\n            }\n            type=\"error\"\n            closable={false}\n          />\n        </div>\n      );\n    } else {\n      networkDisplay = (\n        <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\n          <Alert\n            message=\"‚ö†Ô∏è Wrong Network\"\n            description={\n              <div>\n                You have <b>{networkSelected && networkSelected.name}</b> selected and you need to be on{\" \"}\n                <Button\n                  onClick={async () => {\n                    const ethereum = window.ethereum;\n                    const data = [\n                      {\n                        chainId: \"0x\" + targetNetwork.chainId.toString(16),\n                        chainName: targetNetwork.name,\n                        nativeCurrency: targetNetwork.nativeCurrency,\n                        rpcUrls: [targetNetwork.rpcUrl],\n                        blockExplorerUrls: [targetNetwork.blockExplorer],\n                      },\n                    ];\n                    console.log(\"data\", data);\n\n                    let switchTx;\n                    // https://docs.metamask.io/guide/rpc-api.html#other-rpc-methods\n                    try {\n                      switchTx = await ethereum.request({\n                        method: \"wallet_switchEthereumChain\",\n                        params: [{ chainId: data[0].chainId }],\n                      });\n                    } catch (switchError) {\n                      // not checking specific error code, because maybe we're not using MetaMask\n                      try {\n                        switchTx = await ethereum.request({\n                          method: \"wallet_addEthereumChain\",\n                          params: data,\n                        });\n                      } catch (addError) {\n                        // handle \"add\" error\n                      }\n                    }\n\n                    if (switchTx) {\n                      console.log(switchTx);\n                    }\n                  }}\n                >\n                  <b>{networkLocal && networkLocal.name}</b>\n                </Button>\n              </div>\n            }\n            type=\"error\"\n            closable={false}\n          />\n        </div>\n      );\n    }\n  } else {\n    networkDisplay = (\n      <div style={{ zIndex: -1, position: \"absolute\", right: 154, top: 28, padding: 16, color: targetNetwork.color }}>\n        {targetNetwork.name}\n      </div>\n    );\n  }\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new ethers.providers.Web3Provider(provider));\n\n    provider.on(\"chainChanged\", chainId => {\n      console.log(`chain changed to ${chainId}! updating providers`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    provider.on(\"accountsChanged\", () => {\n      console.log(`account changed!`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    // Subscribe to session disconnection\n    provider.on(\"disconnect\", (code, reason) => {\n      console.log(code, reason);\n      logoutOfWeb3Modal();\n    });\n  }, [setInjectedProvider]);\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    setRoute(window.location.pathname);\n  }, [setRoute]);\n\n  let faucetHint = \"\";\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name.indexOf(\"local\") !== -1;\n\n  const [faucetClicked, setFaucetClicked] = useState(false);\n  if (\n    !faucetClicked &&\n    localProvider &&\n    localProvider._network &&\n    localProvider._network.chainId === 31337 &&\n    yourLocalBalance &&\n    ethers.utils.formatEther(yourLocalBalance) <= 0\n  ) {\n    faucetHint = (\n      <div style={{ padding: 16 }}>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            faucetTx({\n              to: address,\n              value: ethers.utils.parseEther(\"1\"),\n            });\n            setFaucetClicked(true);\n          }}\n        >\n          üí∞ Grab funds from the faucet ‚õΩÔ∏è\n        </Button>\n      </div>\n    );\n  }\n\n  const buyTokensEvents = useEventListener(readContracts, \"Vendor\", \"BuyTokens\", localProvider, 1);\n  console.log(\"üìü buyTokensEvents:\", buyTokensEvents);\n\n  const [tokenBuyAmount, setTokenBuyAmount] = useState({\n    valid: false,\n    value: ''\n  });\n  const [tokenSellAmount, setTokenSellAmount] = useState({\n    valid: false,\n    value: ''\n  });\n  const [isSellAmountApproved, setIsSellAmountApproved] = useState();\n\n  useEffect(()=>{\n    console.log(\"tokenSellAmount\",tokenSellAmount.value)\n    const tokenSellAmountBN = tokenSellAmount.valid ? ethers.utils.parseEther(\"\" + tokenSellAmount.value) : 0;\n    console.log(\"tokenSellAmountBN\",tokenSellAmountBN)\n    setIsSellAmountApproved(vendorApproval && tokenSellAmount.value && vendorApproval.gte(tokenSellAmountBN))\n  },[tokenSellAmount, readContracts])\n  console.log(\"isSellAmountApproved\",isSellAmountApproved)\n\n  const ethCostToPurchaseTokens =\n    tokenBuyAmount.valid && tokensPerEth && ethers.utils.parseEther(\"\" + tokenBuyAmount.value / parseFloat(tokensPerEth));\n  console.log(\"ethCostToPurchaseTokens:\", ethCostToPurchaseTokens);\n\n  const ethValueToSellTokens =\n    tokenSellAmount.valid && tokensPerEth && ethers.utils.parseEther(\"\" + tokenSellAmount.value / parseFloat(tokensPerEth));\n  console.log(\"ethValueToSellTokens:\", ethValueToSellTokens);\n\n  const [tokenSendToAddress, setTokenSendToAddress] = useState();\n  const [tokenSendAmount, setTokenSendAmount] = useState();\n\n  const [buying, setBuying] = useState();\n\n  let transferDisplay = \"\";\n  if (yourTokenBalance) {\n    transferDisplay = (\n      <div style={{ padding: 8, marginTop: 32, width: 420, margin: \"auto\" }}>\n        <Card title=\"Transfer tokens\">\n          <div>\n            <div style={{ padding: 8 }}>\n              <AddressInput\n                ensProvider={mainnetProvider}\n                placeholder=\"to address\"\n                value={tokenSendToAddress}\n                onChange={setTokenSendToAddress}\n              />\n            </div>\n            <div style={{ padding: 8 }}>\n              <Input\n                style={{ textAlign: \"center\" }}\n                placeholder={\"amount of tokens to send\"}\n                value={tokenSendAmount}\n                onChange={e => {\n                  setTokenSendAmount(e.target.value);\n                }}\n              />\n            </div>\n          </div>\n          <div style={{ padding: 8 }}>\n            <Button\n              type={\"primary\"}\n              onClick={() => {\n                tx(\n                  writeContracts.YourToken.transfer(tokenSendToAddress, ethers.utils.parseEther(\"\" + tokenSendAmount)),\n                );\n              }}\n            >\n              Send Tokens\n            </Button>\n          </div>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      {/* ‚úèÔ∏è Edit the header and change the title to your project name */}\n      <Header />\n      {networkDisplay}\n      <BrowserRouter>\n        <Menu style={{ textAlign: \"center\" }} selectedKeys={[route]} mode=\"horizontal\">\n          <Menu.Item key=\"/\">\n            <Link\n              onClick={() => {\n                setRoute(\"/\");\n              }}\n              to=\"/\"\n            >\n              YourToken\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"/contracts\">\n            <Link\n              onClick={() => {\n                setRoute(\"/contracts\");\n              }}\n              to=\"/contracts\"\n            >\n              Debug Contracts\n            </Link>\n          </Menu.Item>\n        </Menu>\n\n        <Switch>\n          <Route exact path=\"/\">\n            <div style={{ padding: 8, marginTop: 32, width: 300, margin: \"auto\" }}>\n              <Card title=\"Your Tokens\" extra={<a href=\"#\">code</a>}>\n                <div style={{ padding: 8 }}>\n                  <Balance balance={yourTokenBalance} fontSize={64} />\n                </div>\n              </Card>\n            </div>\n            {transferDisplay}\n            <Divider />\n            <div style={{ padding: 8, marginTop: 32, width: 300, margin: \"auto\" }}>\n              <Card title=\"Buy Tokens\" extra={<a href=\"#\">code</a>}>\n                <div style={{ padding: 8 }}>{tokensPerEth && tokensPerEth.toNumber()} tokens per ETH</div>\n                <div style={{ padding: 8 }}>\n                  <Input\n                    style={{ textAlign: \"center\" }}\n                    placeholder={\"amount of tokens to buy\"}\n                    value={tokenBuyAmount.value}\n                    onChange={e => {\n                      const newValue = e.target.value.startsWith(\".\") ? \"0.\" : e.target.value;\n                      const buyAmount = {\n                        value: newValue,\n                        valid: /^\\d*\\.?\\d+$/.test(newValue)\n                      }\n                      setTokenBuyAmount(buyAmount);\n                    }}\n                  />\n                  <Balance balance={ethCostToPurchaseTokens} dollarMultiplier={price} />\n                </div>\n\n                <div style={{ padding: 8 }}>\n                  <Button\n                    type={\"primary\"}\n                    loading={buying}\n                    onClick={async () => {\n                      setBuying(true);\n                      await tx(writeContracts.Vendor.buyTokens({ value: ethCostToPurchaseTokens }));\n                      setBuying(false);\n                    }}\n                    disabled={!tokenBuyAmount.valid}\n                  >\n                    Buy Tokens\n                  </Button>\n                </div>\n              </Card>\n            </div>\n          \n            \n            \n            {/*Extra UI for buying the tokens back from the user using \"approve\" and \"sellTokens\"\n\n            <Divider />\n            <div style={{ padding: 8, marginTop: 32, width: 300, margin: \"auto\" }}>\n              <Card title=\"Sell Tokens\">\n                <div style={{ padding: 8 }}>{tokensPerEth && tokensPerEth.toNumber()} tokens per ETH</div>\n\n                <div style={{ padding: 8 }}>\n                  <Input\n                    style={{ textAlign: \"center\" }}\n                    placeholder={\"amount of tokens to sell\"}\n                    value={tokenSellAmount.value}\n                    onChange={e => {\n                      const newValue = e.target.value.startsWith(\".\") ? \"0.\" : e.target.value;\n                      const sellAmount = {\n                        value: newValue,\n                        valid: /^\\d*\\.?\\d+$/.test(newValue)\n                      }\n                      setTokenSellAmount(sellAmount);\n                    }}\n                  />\n                  <Balance balance={ethValueToSellTokens} dollarMultiplier={price} />\n                </div>\n                {isSellAmountApproved?\n\n                  <div style={{ padding: 8 }}>\n                    <Button\n                      disabled={true}\n                      type={\"primary\"}\n                    >\n                      Approve Tokens\n                    </Button>\n                    <Button\n                      type={\"primary\"}\n                      loading={buying}\n                      onClick={async () => {\n                        setBuying(true);\n                        await tx(writeContracts.Vendor.sellTokens(tokenSellAmount.valid && ethers.utils.parseEther(tokenSellAmount.value)));\n                        setBuying(false);\n                        setTokenSellAmount(\"\");\n                      }}\n                      disabled={!tokenSellAmount.valid}\n                    >\n                      Sell Tokens\n                    </Button>\n                  </div>\n                  :\n                  <div style={{ padding: 8 }}>\n                    <Button\n                      type={\"primary\"}\n                      loading={buying}\n                      onClick={async () => {\n                        setBuying(true);\n                        await tx(writeContracts.YourToken.approve(readContracts.Vendor.address, tokenSellAmount.valid && ethers.utils.parseEther(tokenSellAmount.value)));\n                        setBuying(false);\n                        let resetAmount = tokenSellAmount\n                        setTokenSellAmount(\"\");\n                        setTimeout(()=>{\n                          setTokenSellAmount(resetAmount)\n                        },1500)\n                      }}\n                      disabled={!tokenSellAmount.valid}\n                      >\n                      Approve Tokens\n                    </Button>\n                    <Button\n                      disabled={true}\n                      type={\"primary\"}\n                    >\n                      Sell Tokens\n                    </Button>\n                  </div>\n                    }\n\n\n              </Card>\n            </div>\n            */}\n            <div style={{ padding: 8, marginTop: 32 }}>\n              <div>Vendor Token Balance:</div>\n              <Balance balance={vendorTokenBalance} fontSize={64} />\n            </div>\n\n            <div style={{ padding: 8 }}>\n              <div>Vendor ETH Balance:</div>\n              <Balance balance={vendorETHBalance} fontSize={64} /> ETH\n            </div>\n\n            <div style={{ width: 500, margin: \"auto\", marginTop: 64 }}>\n              <div>Buy Token Events:</div>\n              <List\n                dataSource={buyTokensEvents}\n                renderItem={item => {\n                  return (\n                    <List.Item key={item.blockNumber + item.blockHash}>\n                      <Address value={item.args[0]} ensProvider={mainnetProvider} fontSize={16} /> paid\n                      <Balance balance={item.args[1]} />\n                      ETH to get\n                      <Balance balance={item.args[2]} />\n                      Tokens\n                    </List.Item>\n                  );\n                }}\n              />\n            </div>\n\n            {/*\n\n                üéõ this scaffolding is full of commonly used components\n                this <Contract/> component will automatically parse your ABI\n                and give you a form to interact with it locally\n\n            <Contract\n              name=\"YourContract\"\n              signer={userSigner}\n              provider={localProvider}\n              address={address}\n              blockExplorer={blockExplorer}\n              contractConfig={contractConfig}\n            />\n            */}\n          </Route>\n          <Route path=\"/contracts\">\n            <Contract\n              name=\"Vendor\"\n              signer={userSigner}\n              provider={localProvider}\n              address={address}\n              blockExplorer={blockExplorer}\n              contractConfig={contractConfig}\n            />\n            <Contract\n              name=\"YourToken\"\n              signer={userSigner}\n              provider={localProvider}\n              address={address}\n              blockExplorer={blockExplorer}\n              contractConfig={contractConfig}\n            />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n\n      <ThemeSwitch />\n\n      {/* üë®‚Äçüíº Your account is in the top right with a wallet at connect options */}\n      <div style={{ position: \"fixed\", textAlign: \"right\", right: 0, top: 0, padding: 10 }}>\n        <Account\n          address={address}\n          localProvider={localProvider}\n          userSigner={userSigner}\n          mainnetProvider={mainnetProvider}\n          price={price}\n          web3Modal={web3Modal}\n          loadWeb3Modal={loadWeb3Modal}\n          logoutOfWeb3Modal={logoutOfWeb3Modal}\n          blockExplorer={blockExplorer}\n        />\n        {faucetHint}\n      </div>\n\n      <div style={{ marginTop: 32, opacity: 0.5 }}>\n        Created by <Address value={\"Your...address\"} ensProvider={mainnetProvider} fontSize={16} />\n      </div>\n\n      <div style={{ marginTop: 32, paddingBottom: 128, opacity: 0.5 }}>\n        <a\n          target=\"_blank\"\n          style={{ padding: 32, color: \"#000\" }}\n          href=\"https://github.com/austintgriffith/scaffold-eth\"\n        >\n          üç¥ Fork me!\n        </a>\n      </div>\n\n      {/* üó∫ Extra UI like gas price, eth price, faucet, and support: */}\n      <div style={{ position: \"fixed\", textAlign: \"left\", left: 0, bottom: 20, padding: 10 }}>\n        <Row align=\"middle\" gutter={[4, 4]}>\n          <Col span={8}>\n            <Ramp price={price} address={address} networks={NETWORKS} />\n          </Col>\n\n          <Col span={8} style={{ textAlign: \"center\", opacity: 0.8 }}>\n            <GasGauge gasPrice={gasPrice} />\n          </Col>\n          <Col span={8} style={{ textAlign: \"center\", opacity: 1 }}>\n            <Button\n              onClick={() => {\n                window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n              }}\n              size=\"large\"\n              shape=\"round\"\n            >\n              <span style={{ marginRight: 8 }} role=\"img\" aria-label=\"support\">\n                üí¨\n              </span>\n              Support\n            </Button>\n          </Col>\n        </Row>\n\n        <Row align=\"middle\" gutter={[4, 4]}>\n          <Col span={24}>\n            {\n              /*  if the local provider has a signer, let's show the faucet:  */\n              faucetAvailable ? (\n                <Faucet localProvider={localProvider} price={price} ensProvider={mainnetProvider} />\n              ) : (\n                \"\"\n              )\n            }\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}