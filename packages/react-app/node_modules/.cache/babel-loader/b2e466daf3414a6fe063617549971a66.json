{"ast":null,"code":"import _slicedToArray from\"/Users/pidoxy/bockggames/task-1/challenge-2-token-vendor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _regeneratorRuntime from\"/Users/pidoxy/bockggames/task-1/challenge-2-token-vendor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/pidoxy/bockggames/task-1/challenge-2-token-vendor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import Portis from\"@portis/web3\";import WalletConnectProvider from\"@walletconnect/web3-provider\";import{Alert,Button,Card,Col,Divider,Input,List,Menu,Row}from\"antd\";import\"antd/dist/antd.css\";import Authereum from\"authereum\";import{useBalance,useContractLoader,useContractReader,useGasPrice,useOnBlock,useUserProviderAndSigner}from\"eth-hooks\";import{useExchangeEthPrice}from\"eth-hooks/dapps/dex\";import{useEventListener}from\"eth-hooks/events/useEventListener\";import Fortmatic from\"fortmatic\";import React,{useCallback,useEffect,useState}from\"react\";import{BrowserRouter,Link,Route,Switch}from\"react-router-dom\";//import Torus from \"@toruslabs/torus-embed\"\nimport WalletLink from\"walletlink\";import Web3Modal from\"web3modal\";import\"./App.css\";import{Account,Address,AddressInput,Balance,Contract,Faucet,GasGauge,Header,Ramp,ThemeSwitch}from\"./components\";import{INFURA_ID,NETWORK,NETWORKS}from\"./constants\";import{Transactor}from\"./helpers\";// contracts\nimport externalContracts from\"./contracts/external_contracts\";import deployedContracts from\"./contracts/hardhat_contracts.json\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var _require=require(\"ethers\"),ethers=_require.ethers;/*\n    Welcome to üèó scaffold-eth !\n\n    Code:\n    https://github.com/austintgriffith/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    üåè EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/ /// üì° What chain are your contracts deployed to?\nvar targetNetwork=NETWORKS.rinkeby;// <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n// üò¨ Sorry for all the console logging\nvar DEBUG=true;var NETWORKCHECK=true;// üõ∞ providers\nif(DEBUG)console.log(\"üì° Connecting to Mainnet Ethereum\");// const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n//\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\n// Using StaticJsonRpcProvider as the chainId won't change see https://github.com/ethers-io/ethers.js/issues/901\nvar scaffoldEthProvider=navigator.onLine?new ethers.providers.StaticJsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\"):null;var poktMainnetProvider=navigator.onLine?new ethers.providers.StaticJsonRpcProvider(\"https://eth-mainnet.gateway.pokt.network/v1/lb/611156b4a585a20035148406\"):null;var mainnetInfura=navigator.onLine?new ethers.providers.StaticJsonRpcProvider(\"https://mainnet.infura.io/v3/\"+INFURA_ID):null;// ( ‚ö†Ô∏è Getting \"failed to meet quorum\" errors? Check your INFURA_ID\n// üè† Your local provider is usually pointed at your local blockchain\nvar localProviderUrl=targetNetwork.rpcUrl;// as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\nvar localProviderUrlFromEnv=process.env.REACT_APP_PROVIDER?process.env.REACT_APP_PROVIDER:localProviderUrl;if(DEBUG)console.log(\"üè† Connecting to provider:\",localProviderUrlFromEnv);var localProvider=new ethers.providers.StaticJsonRpcProvider(localProviderUrlFromEnv);// üî≠ block explorer URL\nvar blockExplorer=targetNetwork.blockExplorer;// Coinbase walletLink init\nvar walletLink=new WalletLink({appName:\"coinbase\"});// WalletLink provider\nvar walletLinkProvider=walletLink.makeWeb3Provider(\"https://mainnet.infura.io/v3/\".concat(INFURA_ID),1);// Portis ID: 6255fb2b-58c8-433b-a2c9-62098c05ddc9\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/var web3Modal=new Web3Modal({network:\"mainnet\",// Optional. If using WalletConnect on xDai, change network to \"xdai\" and add RPC info below for xDai chain.\ncacheProvider:true,// optional\ntheme:\"light\",// optional. Change to \"dark\" for a dark theme.\nproviderOptions:{walletconnect:{package:WalletConnectProvider,// required\noptions:{bridge:\"https://polygon.bridge.walletconnect.org\",infuraId:INFURA_ID,rpc:{1:\"https://mainnet.infura.io/v3/\".concat(INFURA_ID),// mainnet // For more WalletConnect providers: https://docs.walletconnect.org/quick-start/dapps/web3-provider#required\n42:\"https://kovan.infura.io/v3/\".concat(INFURA_ID),100:\"https://dai.poa.network\"// xDai\n}}},portis:{display:{logo:\"https://user-images.githubusercontent.com/9419140/128913641-d025bc0c-e059-42de-a57b-422f196867ce.png\",name:\"Portis\",description:\"Connect to Portis App\"},package:Portis,options:{id:\"6255fb2b-58c8-433b-a2c9-62098c05ddc9\"}},fortmatic:{package:Fortmatic,// required\noptions:{key:\"pk_live_5A7C91B2FC585A17\"// required\n}},// torus: {\n//   package: Torus,\n//   options: {\n//     networkParams: {\n//       host: \"https://localhost:8545\", // optional\n//       chainId: 1337, // optional\n//       networkId: 1337 // optional\n//     },\n//     config: {\n//       buildEnv: \"development\" // optional\n//     },\n//   },\n// },\n\"custom-walletlink\":{display:{logo:\"https://play-lh.googleusercontent.com/PjoJoG27miSglVBXoXrxBSLveV6e3EeBPpNY55aiUUBM9Q1RCETKCOqdOkX2ZydqVf0\",name:\"Coinbase\",description:\"Connect to Coinbase Wallet (not Coinbase App)\"},package:walletLinkProvider,connector:function(){var _connector=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(provider,_options){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return provider.enable();case 2:return _context.abrupt(\"return\",provider);case 3:case\"end\":return _context.stop();}}},_callee);}));function connector(_x,_x2){return _connector.apply(this,arguments);}return connector;}()},authereum:{package:Authereum// required\n}}});function App(props){var mainnetProvider=poktMainnetProvider&&poktMainnetProvider._isProvider?poktMainnetProvider:scaffoldEthProvider&&scaffoldEthProvider._network?scaffoldEthProvider:mainnetInfura;var _useState=useState(),_useState2=_slicedToArray(_useState,2),injectedProvider=_useState2[0],setInjectedProvider=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),address=_useState4[0],setAddress=_useState4[1];var logoutOfWeb3Modal=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return web3Modal.clearCachedProvider();case 2:if(!(injectedProvider&&injectedProvider.provider&&typeof injectedProvider.provider.disconnect==\"function\")){_context2.next=5;break;}_context2.next=5;return injectedProvider.provider.disconnect();case 5:setTimeout(function(){window.location.reload();},1);case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function logoutOfWeb3Modal(){return _ref.apply(this,arguments);};}();/* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */var price=useExchangeEthPrice(targetNetwork,mainnetProvider);/* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */var gasPrice=useGasPrice(targetNetwork,\"fast\");// Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\nvar userProviderAndSigner=useUserProviderAndSigner(injectedProvider,localProvider);var userSigner=userProviderAndSigner.signer;useEffect(function(){function getAddress(){return _getAddress.apply(this,arguments);}function _getAddress(){_getAddress=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var newAddress;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!userSigner){_context3.next=5;break;}_context3.next=3;return userSigner.getAddress();case 3:newAddress=_context3.sent;setAddress(newAddress);case 5:case\"end\":return _context3.stop();}}},_callee3);}));return _getAddress.apply(this,arguments);}getAddress();},[userSigner]);// You can warn the user if you would like them to be on a specific network\nvar localChainId=localProvider&&localProvider._network&&localProvider._network.chainId;var selectedChainId=userSigner&&userSigner.provider&&userSigner.provider._network&&userSigner.provider._network.chainId;// For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n// The transactor wraps transactions and provides notificiations\nvar tx=Transactor(userSigner,gasPrice);// Faucet Tx can be used to send funds from the faucet\nvar faucetTx=Transactor(localProvider,gasPrice);// üèó scaffold-eth is full of handy hooks like this one to get your balance:\nvar yourLocalBalance=useBalance(localProvider,address);// Just plug in different üõ∞ providers to get your balance on different chains:\nvar yourMainnetBalance=useBalance(mainnetProvider,address);var contractConfig={deployedContracts:deployedContracts||{},externalContracts:externalContracts||{}};// Load in your local üìù contract and read a value from it:\nvar readContracts=useContractLoader(localProvider,contractConfig);// If you want to make üîê write transactions to your contracts, use the userSigner:\nvar writeContracts=useContractLoader(userSigner,contractConfig,localChainId);// EXTERNAL CONTRACT EXAMPLE:\n//\n// If you want to bring in the mainnet DAI contract it would look like:\nvar mainnetContracts=useContractLoader(mainnetProvider,contractConfig);// If you want to call a function on a new block\nuseOnBlock(mainnetProvider,function(){console.log(\"\\u26D3 A new mainnet block is here: \".concat(mainnetProvider._lastBlockNumber));});// Then read your DAI balance like:\nvar myMainnetDAIBalance=useContractReader(mainnetContracts,\"DAI\",\"balanceOf\",[\"0x34aA3F359A9D614239015126635CE7732c18fDF3\"]);var vendorAddress=readContracts&&readContracts.Vendor&&readContracts.Vendor.address;var vendorETHBalance=useBalance(localProvider,vendorAddress);if(DEBUG)console.log(\"üíµ vendorETHBalance\",vendorETHBalance?ethers.utils.formatEther(vendorETHBalance):\"...\");var vendorApproval=useContractReader(readContracts,\"YourToken\",\"allowance\",[address,vendorAddress]);console.log(\"ü§è vendorApproval\",vendorApproval);var vendorTokenBalance=useContractReader(readContracts,\"YourToken\",\"balanceOf\",[vendorAddress]);console.log(\"üèµ vendorTokenBalance:\",vendorTokenBalance?ethers.utils.formatEther(vendorTokenBalance):\"...\");var yourTokenBalance=useContractReader(readContracts,\"YourToken\",\"balanceOf\",[address]);console.log(\"üèµ yourTokenBalance:\",yourTokenBalance?ethers.utils.formatEther(yourTokenBalance):\"...\");var tokensPerEth=useContractReader(readContracts,\"Vendor\",\"tokensPerEth\");console.log(\"üè¶ tokensPerEth:\",tokensPerEth?tokensPerEth.toString():\"...\");// const complete = useContractReader(readContracts,\"ExampleExternalContract\", \"completed\")\n// console.log(\"‚úÖ complete:\",complete)\n//\n// const exampleExternalContractBalance = useBalance(localProvider, readContracts && readContracts.ExampleExternalContract.address);\n// if(DEBUG) console.log(\"üíµ exampleExternalContractBalance\", exampleExternalContractBalance )\n// let completeDisplay = \"\"\n// if(false){\n//   completeDisplay = (\n//     <div style={{padding:64, backgroundColor:\"#eeffef\", fontWeight:\"bolder\"}}>\n//       üöÄ üéñ üë©‚ÄçüöÄ  -  Staking App triggered `ExampleExternalContract` -- üéâ  üçæ   üéä\n//       <Balance\n//         balance={0}\n//         fontSize={64}\n//       /> ETH staked!\n//     </div>\n//   )\n// }\n/*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"üè∑ Resolved austingriffith.eth as:\",addressFromENS)\n  */ //\n// üß´ DEBUG üë®üèª‚Äçüî¨\n//\nuseEffect(function(){if(DEBUG&&mainnetProvider&&address&&selectedChainId&&yourLocalBalance&&yourMainnetBalance&&readContracts&&writeContracts&&mainnetContracts){console.log(\"_____________________________________ üèó scaffold-eth _____________________________________\");console.log(\"üåé mainnetProvider\",mainnetProvider);console.log(\"üè† localChainId\",localChainId);console.log(\"üë©‚Äçüíº selected address:\",address);console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\",selectedChainId);console.log(\"üíµ yourLocalBalance\",yourLocalBalance?ethers.utils.formatEther(yourLocalBalance):\"...\");console.log(\"üíµ yourMainnetBalance\",yourMainnetBalance?ethers.utils.formatEther(yourMainnetBalance):\"...\");console.log(\"üìù readContracts\",readContracts);console.log(\"üåç DAI contract on mainnet:\",mainnetContracts);console.log(\"üíµ yourMainnetDAIBalance\",myMainnetDAIBalance);console.log(\"üîê writeContracts\",writeContracts);}},[mainnetProvider,address,selectedChainId,yourLocalBalance,yourMainnetBalance,readContracts,writeContracts,mainnetContracts]);var networkDisplay=\"\";if(NETWORKCHECK&&localChainId&&selectedChainId&&localChainId!==selectedChainId){var networkSelected=NETWORK(selectedChainId);var networkLocal=NETWORK(localChainId);if(selectedChainId===1337&&localChainId===31337){networkDisplay=/*#__PURE__*/_jsx(\"div\",{style:{zIndex:2,position:\"absolute\",right:0,top:60,padding:16},children:/*#__PURE__*/_jsx(Alert,{message:\"\\u26A0\\uFE0F Wrong Network ID\",description:/*#__PURE__*/_jsxs(\"div\",{children:[\"You have \",/*#__PURE__*/_jsx(\"b\",{children:\"chain id 1337\"}),\" for localhost and you need to change it to \",/*#__PURE__*/_jsx(\"b\",{children:\"31337\"}),\" to work with HardHat.\",/*#__PURE__*/_jsx(\"div\",{children:\"(MetaMask -> Settings -> Networks -> Chain ID -> 31337)\"})]}),type:\"error\",closable:false})});}else{networkDisplay=/*#__PURE__*/_jsx(\"div\",{style:{zIndex:2,position:\"absolute\",right:0,top:60,padding:16},children:/*#__PURE__*/_jsx(Alert,{message:\"\\u26A0\\uFE0F Wrong Network\",description:/*#__PURE__*/_jsxs(\"div\",{children:[\"You have \",/*#__PURE__*/_jsx(\"b\",{children:networkSelected&&networkSelected.name}),\" selected and you need to be on\",\" \",/*#__PURE__*/_jsx(Button,{onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var ethereum,data,switchTx;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:ethereum=window.ethereum;data=[{chainId:\"0x\"+targetNetwork.chainId.toString(16),chainName:targetNetwork.name,nativeCurrency:targetNetwork.nativeCurrency,rpcUrls:[targetNetwork.rpcUrl],blockExplorerUrls:[targetNetwork.blockExplorer]}];console.log(\"data\",data);_context4.prev=3;_context4.next=6;return ethereum.request({method:\"wallet_switchEthereumChain\",params:[{chainId:data[0].chainId}]});case 6:switchTx=_context4.sent;_context4.next=19;break;case 9:_context4.prev=9;_context4.t0=_context4[\"catch\"](3);_context4.prev=11;_context4.next=14;return ethereum.request({method:\"wallet_addEthereumChain\",params:data});case 14:switchTx=_context4.sent;_context4.next=19;break;case 17:_context4.prev=17;_context4.t1=_context4[\"catch\"](11);case 19:if(switchTx){console.log(switchTx);}case 20:case\"end\":return _context4.stop();}}},_callee4,null,[[3,9],[11,17]]);})),children:/*#__PURE__*/_jsx(\"b\",{children:networkLocal&&networkLocal.name})})]}),type:\"error\",closable:false})});}}else{networkDisplay=/*#__PURE__*/_jsx(\"div\",{style:{zIndex:-1,position:\"absolute\",right:154,top:28,padding:16,color:targetNetwork.color},children:targetNetwork.name});}var loadWeb3Modal=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var provider;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return web3Modal.connect();case 2:provider=_context5.sent;setInjectedProvider(new ethers.providers.Web3Provider(provider));provider.on(\"chainChanged\",function(chainId){console.log(\"chain changed to \".concat(chainId,\"! updating providers\"));setInjectedProvider(new ethers.providers.Web3Provider(provider));});provider.on(\"accountsChanged\",function(){console.log(\"account changed!\");setInjectedProvider(new ethers.providers.Web3Provider(provider));});// Subscribe to session disconnection\nprovider.on(\"disconnect\",function(code,reason){console.log(code,reason);logoutOfWeb3Modal();});case 7:case\"end\":return _context5.stop();}}},_callee5);})),[setInjectedProvider]);useEffect(function(){if(web3Modal.cachedProvider){loadWeb3Modal();}},[loadWeb3Modal]);var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),route=_useState6[0],setRoute=_useState6[1];useEffect(function(){setRoute(window.location.pathname);},[setRoute]);var faucetHint=\"\";var faucetAvailable=localProvider&&localProvider.connection&&targetNetwork.name.indexOf(\"local\")!==-1;var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),faucetClicked=_useState8[0],setFaucetClicked=_useState8[1];if(!faucetClicked&&localProvider&&localProvider._network&&localProvider._network.chainId===31337&&yourLocalBalance&&ethers.utils.formatEther(yourLocalBalance)<=0){faucetHint=/*#__PURE__*/_jsx(\"div\",{style:{padding:16},children:/*#__PURE__*/_jsx(Button,{type:\"primary\",onClick:function onClick(){faucetTx({to:address,value:ethers.utils.parseEther(\"1\")});setFaucetClicked(true);},children:\"\\uD83D\\uDCB0 Grab funds from the faucet \\u26FD\\uFE0F\"})});}var buyTokensEvents=useEventListener(readContracts,\"Vendor\",\"BuyTokens\",localProvider,1);console.log(\"üìü buyTokensEvents:\",buyTokensEvents);var _useState9=useState({valid:false,value:''}),_useState10=_slicedToArray(_useState9,2),tokenBuyAmount=_useState10[0],setTokenBuyAmount=_useState10[1];var _useState11=useState({valid:false,value:''}),_useState12=_slicedToArray(_useState11,2),tokenSellAmount=_useState12[0],setTokenSellAmount=_useState12[1];var _useState13=useState(),_useState14=_slicedToArray(_useState13,2),isSellAmountApproved=_useState14[0],setIsSellAmountApproved=_useState14[1];useEffect(function(){console.log(\"tokenSellAmount\",tokenSellAmount.value);var tokenSellAmountBN=tokenSellAmount.valid?ethers.utils.parseEther(\"\"+tokenSellAmount.value):0;console.log(\"tokenSellAmountBN\",tokenSellAmountBN);setIsSellAmountApproved(vendorApproval&&tokenSellAmount.value&&vendorApproval.gte(tokenSellAmountBN));},[tokenSellAmount,readContracts]);console.log(\"isSellAmountApproved\",isSellAmountApproved);var ethCostToPurchaseTokens=tokenBuyAmount.valid&&tokensPerEth&&ethers.utils.parseEther(\"\"+tokenBuyAmount.value/parseFloat(tokensPerEth));console.log(\"ethCostToPurchaseTokens:\",ethCostToPurchaseTokens);var ethValueToSellTokens=tokenSellAmount.valid&&tokensPerEth&&ethers.utils.parseEther(\"\"+tokenSellAmount.value/parseFloat(tokensPerEth));console.log(\"ethValueToSellTokens:\",ethValueToSellTokens);var _useState15=useState(),_useState16=_slicedToArray(_useState15,2),tokenSendToAddress=_useState16[0],setTokenSendToAddress=_useState16[1];var _useState17=useState(),_useState18=_slicedToArray(_useState17,2),tokenSendAmount=_useState18[0],setTokenSendAmount=_useState18[1];var _useState19=useState(),_useState20=_slicedToArray(_useState19,2),buying=_useState20[0],setBuying=_useState20[1];var transferDisplay=\"\";if(yourTokenBalance){transferDisplay=/*#__PURE__*/_jsx(\"div\",{style:{padding:8,marginTop:32,width:420,margin:\"auto\"},children:/*#__PURE__*/_jsxs(Card,{title:\"Transfer tokens\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{style:{padding:8},children:/*#__PURE__*/_jsx(AddressInput,{ensProvider:mainnetProvider,placeholder:\"to address\",value:tokenSendToAddress,onChange:setTokenSendToAddress})}),/*#__PURE__*/_jsx(\"div\",{style:{padding:8},children:/*#__PURE__*/_jsx(Input,{style:{textAlign:\"center\"},placeholder:\"amount of tokens to send\",value:tokenSendAmount,onChange:function onChange(e){setTokenSendAmount(e.target.value);}})})]}),/*#__PURE__*/_jsx(\"div\",{style:{padding:8},children:/*#__PURE__*/_jsx(Button,{type:\"primary\",onClick:function onClick(){tx(writeContracts.YourToken.transfer(tokenSendToAddress,ethers.utils.parseEther(\"\"+tokenSendAmount)));},children:\"Send Tokens\"})})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Header,{}),networkDisplay,/*#__PURE__*/_jsxs(BrowserRouter,{children:[/*#__PURE__*/_jsxs(Menu,{style:{textAlign:\"center\"},selectedKeys:[route],mode:\"horizontal\",children:[/*#__PURE__*/_jsx(Menu.Item,{children:/*#__PURE__*/_jsx(Link,{onClick:function onClick(){setRoute(\"/\");},to:\"/\",children:\"YourToken\"})},\"/\"),/*#__PURE__*/_jsx(Menu.Item,{children:/*#__PURE__*/_jsx(Link,{onClick:function onClick(){setRoute(\"/contracts\");},to:\"/contracts\",children:\"Debug Contracts\"})},\"/contracts\")]}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsxs(Route,{exact:true,path:\"/\",children:[/*#__PURE__*/_jsx(\"div\",{style:{padding:8,marginTop:32,width:300,margin:\"auto\"},children:/*#__PURE__*/_jsx(Card,{title:\"Your Tokens\",extra:/*#__PURE__*/_jsx(\"a\",{href:\"#\",children:\"code\"}),children:/*#__PURE__*/_jsx(\"div\",{style:{padding:8},children:/*#__PURE__*/_jsx(Balance,{balance:yourTokenBalance,fontSize:64})})})}),transferDisplay,/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(\"div\",{style:{padding:8,marginTop:32,width:300,margin:\"auto\"},children:/*#__PURE__*/_jsxs(Card,{title:\"Buy Tokens\",extra:/*#__PURE__*/_jsx(\"a\",{href:\"#\",children:\"code\"}),children:[/*#__PURE__*/_jsxs(\"div\",{style:{padding:8},children:[tokensPerEth&&tokensPerEth.toNumber(),\" tokens per ETH\"]}),/*#__PURE__*/_jsxs(\"div\",{style:{padding:8},children:[/*#__PURE__*/_jsx(Input,{style:{textAlign:\"center\"},placeholder:\"amount of tokens to buy\",value:tokenBuyAmount.value,onChange:function onChange(e){var newValue=e.target.value.startsWith(\".\")?\"0.\":e.target.value;var buyAmount={value:newValue,valid:/^\\d*\\.?\\d+$/.test(newValue)};setTokenBuyAmount(buyAmount);}}),/*#__PURE__*/_jsx(Balance,{balance:ethCostToPurchaseTokens,dollarMultiplier:price})]}),/*#__PURE__*/_jsx(\"div\",{style:{padding:8},children:/*#__PURE__*/_jsx(Button,{type:\"primary\",loading:buying,onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:setBuying(true);_context6.next=3;return tx(writeContracts.Vendor.buyTokens({value:ethCostToPurchaseTokens}));case 3:setBuying(false);case 4:case\"end\":return _context6.stop();}}},_callee6);})),disabled:!tokenBuyAmount.valid,children:\"Buy Tokens\"})})]})}),/*#__PURE__*/_jsxs(\"div\",{style:{padding:8,marginTop:32},children:[/*#__PURE__*/_jsx(\"div\",{children:\"Vendor Token Balance:\"}),/*#__PURE__*/_jsx(Balance,{balance:vendorTokenBalance,fontSize:64})]}),/*#__PURE__*/_jsxs(\"div\",{style:{padding:8},children:[/*#__PURE__*/_jsx(\"div\",{children:\"Vendor ETH Balance:\"}),/*#__PURE__*/_jsx(Balance,{balance:vendorETHBalance,fontSize:64}),\" ETH\"]}),/*#__PURE__*/_jsxs(\"div\",{style:{width:500,margin:\"auto\",marginTop:64},children:[/*#__PURE__*/_jsx(\"div\",{children:\"Buy Token Events:\"}),/*#__PURE__*/_jsx(List,{dataSource:buyTokensEvents,renderItem:function renderItem(item){return/*#__PURE__*/_jsxs(List.Item,{children:[/*#__PURE__*/_jsx(Address,{value:item.args[0],ensProvider:mainnetProvider,fontSize:16}),\" paid\",/*#__PURE__*/_jsx(Balance,{balance:item.args[1]}),\"ETH to get\",/*#__PURE__*/_jsx(Balance,{balance:item.args[2]}),\"Tokens\"]},item.blockNumber+item.blockHash);}})]})]}),/*#__PURE__*/_jsxs(Route,{path:\"/contracts\",children:[/*#__PURE__*/_jsx(Contract,{name:\"Vendor\",signer:userSigner,provider:localProvider,address:address,blockExplorer:blockExplorer,contractConfig:contractConfig}),/*#__PURE__*/_jsx(Contract,{name:\"YourToken\",signer:userSigner,provider:localProvider,address:address,blockExplorer:blockExplorer,contractConfig:contractConfig})]})]})]}),/*#__PURE__*/_jsx(ThemeSwitch,{}),/*#__PURE__*/_jsxs(\"div\",{style:{position:\"fixed\",textAlign:\"right\",right:0,top:0,padding:10},children:[/*#__PURE__*/_jsx(Account,{address:address,localProvider:localProvider,userSigner:userSigner,mainnetProvider:mainnetProvider,price:price,web3Modal:web3Modal,loadWeb3Modal:loadWeb3Modal,logoutOfWeb3Modal:logoutOfWeb3Modal,blockExplorer:blockExplorer}),faucetHint]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:32,opacity:0.5},children:[\"Created by \",/*#__PURE__*/_jsx(Address,{value:\"Your...address\",ensProvider:mainnetProvider,fontSize:16})]}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:32,paddingBottom:128,opacity:0.5},children:/*#__PURE__*/_jsx(\"a\",{target:\"_blank\",style:{padding:32,color:\"#000\"},href:\"https://github.com/austintgriffith/scaffold-eth\",children:\"\\uD83C\\uDF74 Fork me!\"})}),/*#__PURE__*/_jsxs(\"div\",{style:{position:\"fixed\",textAlign:\"left\",left:0,bottom:20,padding:10},children:[/*#__PURE__*/_jsxs(Row,{align:\"middle\",gutter:[4,4],children:[/*#__PURE__*/_jsx(Col,{span:8,children:/*#__PURE__*/_jsx(Ramp,{price:price,address:address,networks:NETWORKS})}),/*#__PURE__*/_jsx(Col,{span:8,style:{textAlign:\"center\",opacity:0.8},children:/*#__PURE__*/_jsx(GasGauge,{gasPrice:gasPrice})}),/*#__PURE__*/_jsx(Col,{span:8,style:{textAlign:\"center\",opacity:1},children:/*#__PURE__*/_jsxs(Button,{onClick:function onClick(){window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");},size:\"large\",shape:\"round\",children:[/*#__PURE__*/_jsx(\"span\",{style:{marginRight:8},role:\"img\",\"aria-label\":\"support\",children:\"\\uD83D\\uDCAC\"}),\"Support\"]})})]}),/*#__PURE__*/_jsx(Row,{align:\"middle\",gutter:[4,4],children:/*#__PURE__*/_jsx(Col,{span:24,children:/*  if the local provider has a signer, let's show the faucet:  */faucetAvailable?/*#__PURE__*/_jsx(Faucet,{localProvider:localProvider,price:price,ensProvider:mainnetProvider}):\"\"})})]})]});}export default App;","map":{"version":3,"sources":["/Users/pidoxy/bockggames/task-1/challenge-2-token-vendor/packages/react-app/src/App.jsx"],"names":["Portis","WalletConnectProvider","Alert","Button","Card","Col","Divider","Input","List","Menu","Row","Authereum","useBalance","useContractLoader","useContractReader","useGasPrice","useOnBlock","useUserProviderAndSigner","useExchangeEthPrice","useEventListener","Fortmatic","React","useCallback","useEffect","useState","BrowserRouter","Link","Route","Switch","WalletLink","Web3Modal","Account","Address","AddressInput","Balance","Contract","Faucet","GasGauge","Header","Ramp","ThemeSwitch","INFURA_ID","NETWORK","NETWORKS","Transactor","externalContracts","deployedContracts","require","ethers","targetNetwork","rinkeby","DEBUG","NETWORKCHECK","console","log","scaffoldEthProvider","navigator","onLine","providers","StaticJsonRpcProvider","poktMainnetProvider","mainnetInfura","localProviderUrl","rpcUrl","localProviderUrlFromEnv","process","env","REACT_APP_PROVIDER","localProvider","blockExplorer","walletLink","appName","walletLinkProvider","makeWeb3Provider","web3Modal","network","cacheProvider","theme","providerOptions","walletconnect","package","options","bridge","infuraId","rpc","portis","display","logo","name","description","id","fortmatic","key","connector","provider","_options","enable","authereum","App","props","mainnetProvider","_isProvider","_network","injectedProvider","setInjectedProvider","address","setAddress","logoutOfWeb3Modal","clearCachedProvider","disconnect","setTimeout","window","location","reload","price","gasPrice","userProviderAndSigner","userSigner","signer","getAddress","newAddress","localChainId","chainId","selectedChainId","tx","faucetTx","yourLocalBalance","yourMainnetBalance","contractConfig","readContracts","writeContracts","mainnetContracts","_lastBlockNumber","myMainnetDAIBalance","vendorAddress","Vendor","vendorETHBalance","utils","formatEther","vendorApproval","vendorTokenBalance","yourTokenBalance","tokensPerEth","toString","networkDisplay","networkSelected","networkLocal","zIndex","position","right","top","padding","ethereum","data","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","request","method","params","switchTx","color","loadWeb3Modal","connect","Web3Provider","on","code","reason","cachedProvider","route","setRoute","pathname","faucetHint","faucetAvailable","connection","indexOf","faucetClicked","setFaucetClicked","to","value","parseEther","buyTokensEvents","valid","tokenBuyAmount","setTokenBuyAmount","tokenSellAmount","setTokenSellAmount","isSellAmountApproved","setIsSellAmountApproved","tokenSellAmountBN","gte","ethCostToPurchaseTokens","parseFloat","ethValueToSellTokens","tokenSendToAddress","setTokenSendToAddress","tokenSendAmount","setTokenSendAmount","buying","setBuying","transferDisplay","marginTop","width","margin","textAlign","e","target","YourToken","transfer","toNumber","newValue","startsWith","buyAmount","test","buyTokens","item","args","blockNumber","blockHash","opacity","paddingBottom","left","bottom","open","marginRight"],"mappings":"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","sourcesContent":["import Portis from \"@portis/web3\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { Alert, Button, Card, Col, Divider, Input, List, Menu, Row } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport Authereum from \"authereum\";\nimport {\n  useBalance,\n  useContractLoader,\n  useContractReader,\n  useGasPrice,\n  useOnBlock,\n  useUserProviderAndSigner,\n} from \"eth-hooks\";\nimport { useExchangeEthPrice } from \"eth-hooks/dapps/dex\";\nimport { useEventListener } from \"eth-hooks/events/useEventListener\";\nimport Fortmatic from \"fortmatic\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\n//import Torus from \"@toruslabs/torus-embed\"\nimport WalletLink from \"walletlink\";\nimport Web3Modal from \"web3modal\";\nimport \"./App.css\";\nimport {\n  Account,\n  Address,\n  AddressInput,\n  Balance,\n  Contract,\n  Faucet,\n  GasGauge,\n  Header,\n  Ramp,\n  ThemeSwitch,\n} from \"./components\";\nimport { INFURA_ID, NETWORK, NETWORKS } from \"./constants\";\nimport { Transactor } from \"./helpers\";\n\n// contracts\nimport externalContracts from \"./contracts/external_contracts\";\nimport deployedContracts from \"./contracts/hardhat_contracts.json\";\n\nconst { ethers } = require(\"ethers\");\n/*\n    Welcome to üèó scaffold-eth !\n\n    Code:\n    https://github.com/austintgriffith/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    üåè EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n\n/// üì° What chain are your contracts deployed to?\nconst targetNetwork = NETWORKS.rinkeby; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n\n// üò¨ Sorry for all the console logging\nconst DEBUG = true;\nconst NETWORKCHECK = true;\n\n// üõ∞ providers\nif (DEBUG) console.log(\"üì° Connecting to Mainnet Ethereum\");\n// const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n//\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\n// Using StaticJsonRpcProvider as the chainId won't change see https://github.com/ethers-io/ethers.js/issues/901\nconst scaffoldEthProvider = navigator.onLine\n  ? new ethers.providers.StaticJsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\")\n  : null;\nconst poktMainnetProvider = navigator.onLine\n  ? new ethers.providers.StaticJsonRpcProvider(\n      \"https://eth-mainnet.gateway.pokt.network/v1/lb/611156b4a585a20035148406\",\n    )\n  : null;\nconst mainnetInfura = navigator.onLine\n  ? new ethers.providers.StaticJsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID)\n  : null;\n// ( ‚ö†Ô∏è Getting \"failed to meet quorum\" errors? Check your INFURA_ID\n\n// üè† Your local provider is usually pointed at your local blockchain\nconst localProviderUrl = targetNetwork.rpcUrl;\n// as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nif (DEBUG) console.log(\"üè† Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new ethers.providers.StaticJsonRpcProvider(localProviderUrlFromEnv);\n\n// üî≠ block explorer URL\nconst blockExplorer = targetNetwork.blockExplorer;\n\n// Coinbase walletLink init\nconst walletLink = new WalletLink({\n  appName: \"coinbase\",\n});\n\n// WalletLink provider\nconst walletLinkProvider = walletLink.makeWeb3Provider(`https://mainnet.infura.io/v3/${INFURA_ID}`, 1);\n\n// Portis ID: 6255fb2b-58c8-433b-a2c9-62098c05ddc9\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\nconst web3Modal = new Web3Modal({\n  network: \"mainnet\", // Optional. If using WalletConnect on xDai, change network to \"xdai\" and add RPC info below for xDai chain.\n  cacheProvider: true, // optional\n  theme: \"light\", // optional. Change to \"dark\" for a dark theme.\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        bridge: \"https://polygon.bridge.walletconnect.org\",\n        infuraId: INFURA_ID,\n        rpc: {\n          1: `https://mainnet.infura.io/v3/${INFURA_ID}`, // mainnet // For more WalletConnect providers: https://docs.walletconnect.org/quick-start/dapps/web3-provider#required\n          42: `https://kovan.infura.io/v3/${INFURA_ID}`,\n          100: \"https://dai.poa.network\", // xDai\n        },\n      },\n    },\n    portis: {\n      display: {\n        logo: \"https://user-images.githubusercontent.com/9419140/128913641-d025bc0c-e059-42de-a57b-422f196867ce.png\",\n        name: \"Portis\",\n        description: \"Connect to Portis App\",\n      },\n      package: Portis,\n      options: {\n        id: \"6255fb2b-58c8-433b-a2c9-62098c05ddc9\",\n      },\n    },\n    fortmatic: {\n      package: Fortmatic, // required\n      options: {\n        key: \"pk_live_5A7C91B2FC585A17\", // required\n      },\n    },\n    // torus: {\n    //   package: Torus,\n    //   options: {\n    //     networkParams: {\n    //       host: \"https://localhost:8545\", // optional\n    //       chainId: 1337, // optional\n    //       networkId: 1337 // optional\n    //     },\n    //     config: {\n    //       buildEnv: \"development\" // optional\n    //     },\n    //   },\n    // },\n    \"custom-walletlink\": {\n      display: {\n        logo: \"https://play-lh.googleusercontent.com/PjoJoG27miSglVBXoXrxBSLveV6e3EeBPpNY55aiUUBM9Q1RCETKCOqdOkX2ZydqVf0\",\n        name: \"Coinbase\",\n        description: \"Connect to Coinbase Wallet (not Coinbase App)\",\n      },\n      package: walletLinkProvider,\n      connector: async (provider, _options) => {\n        await provider.enable();\n        return provider;\n      },\n    },\n    authereum: {\n      package: Authereum, // required\n    },\n  },\n});\n\nfunction App(props) {\n  const mainnetProvider =\n    poktMainnetProvider && poktMainnetProvider._isProvider\n      ? poktMainnetProvider\n      : scaffoldEthProvider && scaffoldEthProvider._network\n      ? scaffoldEthProvider\n      : mainnetInfura;\n\n  const [injectedProvider, setInjectedProvider] = useState();\n  const [address, setAddress] = useState();\n\n  const logoutOfWeb3Modal = async () => {\n    await web3Modal.clearCachedProvider();\n    if (injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect == \"function\") {\n      await injectedProvider.provider.disconnect();\n    }\n    setTimeout(() => {\n      window.location.reload();\n    }, 1);\n  };\n\n  /* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */\n  const price = useExchangeEthPrice(targetNetwork, mainnetProvider);\n\n  /* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */\n  const gasPrice = useGasPrice(targetNetwork, \"fast\");\n  // Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\n  const userProviderAndSigner = useUserProviderAndSigner(injectedProvider, localProvider);\n  const userSigner = userProviderAndSigner.signer;\n\n  useEffect(() => {\n    async function getAddress() {\n      if (userSigner) {\n        const newAddress = await userSigner.getAddress();\n        setAddress(newAddress);\n      }\n    }\n    getAddress();\n  }, [userSigner]);\n\n  // You can warn the user if you would like them to be on a specific network\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  const selectedChainId =\n    userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId;\n\n  // For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n\n  // The transactor wraps transactions and provides notificiations\n  const tx = Transactor(userSigner, gasPrice);\n\n  // Faucet Tx can be used to send funds from the faucet\n  const faucetTx = Transactor(localProvider, gasPrice);\n\n  // üèó scaffold-eth is full of handy hooks like this one to get your balance:\n  const yourLocalBalance = useBalance(localProvider, address);\n\n  // Just plug in different üõ∞ providers to get your balance on different chains:\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\n\n  const contractConfig = { deployedContracts: deployedContracts || {}, externalContracts: externalContracts || {} };\n\n  // Load in your local üìù contract and read a value from it:\n  const readContracts = useContractLoader(localProvider, contractConfig);\n\n  // If you want to make üîê write transactions to your contracts, use the userSigner:\n  const writeContracts = useContractLoader(userSigner, contractConfig, localChainId);\n\n  // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n  const mainnetContracts = useContractLoader(mainnetProvider, contractConfig);\n\n  // If you want to call a function on a new block\n  useOnBlock(mainnetProvider, () => {\n    console.log(`‚õì A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\n  });\n\n  // Then read your DAI balance like:\n  const myMainnetDAIBalance = useContractReader(mainnetContracts, \"DAI\", \"balanceOf\", [\n    \"0x34aA3F359A9D614239015126635CE7732c18fDF3\",\n  ]);\n\n  const vendorAddress = readContracts && readContracts.Vendor && readContracts.Vendor.address;\n\n  const vendorETHBalance = useBalance(localProvider, vendorAddress);\n  if (DEBUG) console.log(\"üíµ vendorETHBalance\", vendorETHBalance ? ethers.utils.formatEther(vendorETHBalance) : \"...\");\n\n  const vendorApproval = useContractReader(readContracts, \"YourToken\", \"allowance\", [\n    address, vendorAddress\n  ]);\n  console.log(\"ü§è vendorApproval\",vendorApproval)\n\n  const vendorTokenBalance = useContractReader(readContracts, \"YourToken\", \"balanceOf\", [vendorAddress]);\n  console.log(\"üèµ vendorTokenBalance:\", vendorTokenBalance ? ethers.utils.formatEther(vendorTokenBalance) : \"...\");\n\n  const yourTokenBalance = useContractReader(readContracts, \"YourToken\", \"balanceOf\", [address]);\n  console.log(\"üèµ yourTokenBalance:\", yourTokenBalance ? ethers.utils.formatEther(yourTokenBalance) : \"...\");\n\n  const tokensPerEth = useContractReader(readContracts, \"Vendor\", \"tokensPerEth\");\n  console.log(\"üè¶ tokensPerEth:\", tokensPerEth ? tokensPerEth.toString() : \"...\");\n\n  // const complete = useContractReader(readContracts,\"ExampleExternalContract\", \"completed\")\n  // console.log(\"‚úÖ complete:\",complete)\n  //\n  // const exampleExternalContractBalance = useBalance(localProvider, readContracts && readContracts.ExampleExternalContract.address);\n  // if(DEBUG) console.log(\"üíµ exampleExternalContractBalance\", exampleExternalContractBalance )\n\n  // let completeDisplay = \"\"\n  // if(false){\n  //   completeDisplay = (\n  //     <div style={{padding:64, backgroundColor:\"#eeffef\", fontWeight:\"bolder\"}}>\n  //       üöÄ üéñ üë©‚ÄçüöÄ  -  Staking App triggered `ExampleExternalContract` -- üéâ  üçæ   üéä\n  //       <Balance\n  //         balance={0}\n  //         fontSize={64}\n  //       /> ETH staked!\n  //     </div>\n  //   )\n  // }\n\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"üè∑ Resolved austingriffith.eth as:\",addressFromENS)\n  */\n\n  //\n  // üß´ DEBUG üë®üèª‚Äçüî¨\n  //\n  useEffect(() => {\n    if (\n      DEBUG &&\n      mainnetProvider &&\n      address &&\n      selectedChainId &&\n      yourLocalBalance &&\n      yourMainnetBalance &&\n      readContracts &&\n      writeContracts &&\n      mainnetContracts\n    ) {\n      console.log(\"_____________________________________ üèó scaffold-eth _____________________________________\");\n      console.log(\"üåé mainnetProvider\", mainnetProvider);\n      console.log(\"üè† localChainId\", localChainId);\n      console.log(\"üë©‚Äçüíº selected address:\", address);\n      console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\", selectedChainId);\n      console.log(\"üíµ yourLocalBalance\", yourLocalBalance ? ethers.utils.formatEther(yourLocalBalance) : \"...\");\n      console.log(\"üíµ yourMainnetBalance\", yourMainnetBalance ? ethers.utils.formatEther(yourMainnetBalance) : \"...\");\n      console.log(\"üìù readContracts\", readContracts);\n      console.log(\"üåç DAI contract on mainnet:\", mainnetContracts);\n      console.log(\"üíµ yourMainnetDAIBalance\", myMainnetDAIBalance);\n      console.log(\"üîê writeContracts\", writeContracts);\n    }\n  }, [\n    mainnetProvider,\n    address,\n    selectedChainId,\n    yourLocalBalance,\n    yourMainnetBalance,\n    readContracts,\n    writeContracts,\n    mainnetContracts,\n  ]);\n\n  let networkDisplay = \"\";\n  if (NETWORKCHECK && localChainId && selectedChainId && localChainId !== selectedChainId) {\n    const networkSelected = NETWORK(selectedChainId);\n    const networkLocal = NETWORK(localChainId);\n    if (selectedChainId === 1337 && localChainId === 31337) {\n      networkDisplay = (\n        <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\n          <Alert\n            message=\"‚ö†Ô∏è Wrong Network ID\"\n            description={\n              <div>\n                You have <b>chain id 1337</b> for localhost and you need to change it to <b>31337</b> to work with\n                HardHat.\n                <div>(MetaMask -&gt; Settings -&gt; Networks -&gt; Chain ID -&gt; 31337)</div>\n              </div>\n            }\n            type=\"error\"\n            closable={false}\n          />\n        </div>\n      );\n    } else {\n      networkDisplay = (\n        <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\n          <Alert\n            message=\"‚ö†Ô∏è Wrong Network\"\n            description={\n              <div>\n                You have <b>{networkSelected && networkSelected.name}</b> selected and you need to be on{\" \"}\n                <Button\n                  onClick={async () => {\n                    const ethereum = window.ethereum;\n                    const data = [\n                      {\n                        chainId: \"0x\" + targetNetwork.chainId.toString(16),\n                        chainName: targetNetwork.name,\n                        nativeCurrency: targetNetwork.nativeCurrency,\n                        rpcUrls: [targetNetwork.rpcUrl],\n                        blockExplorerUrls: [targetNetwork.blockExplorer],\n                      },\n                    ];\n                    console.log(\"data\", data);\n\n                    let switchTx;\n                    // https://docs.metamask.io/guide/rpc-api.html#other-rpc-methods\n                    try {\n                      switchTx = await ethereum.request({\n                        method: \"wallet_switchEthereumChain\",\n                        params: [{ chainId: data[0].chainId }],\n                      });\n                    } catch (switchError) {\n                      // not checking specific error code, because maybe we're not using MetaMask\n                      try {\n                        switchTx = await ethereum.request({\n                          method: \"wallet_addEthereumChain\",\n                          params: data,\n                        });\n                      } catch (addError) {\n                        // handle \"add\" error\n                      }\n                    }\n\n                    if (switchTx) {\n                      console.log(switchTx);\n                    }\n                  }}\n                >\n                  <b>{networkLocal && networkLocal.name}</b>\n                </Button>\n              </div>\n            }\n            type=\"error\"\n            closable={false}\n          />\n        </div>\n      );\n    }\n  } else {\n    networkDisplay = (\n      <div style={{ zIndex: -1, position: \"absolute\", right: 154, top: 28, padding: 16, color: targetNetwork.color }}>\n        {targetNetwork.name}\n      </div>\n    );\n  }\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new ethers.providers.Web3Provider(provider));\n\n    provider.on(\"chainChanged\", chainId => {\n      console.log(`chain changed to ${chainId}! updating providers`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    provider.on(\"accountsChanged\", () => {\n      console.log(`account changed!`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    // Subscribe to session disconnection\n    provider.on(\"disconnect\", (code, reason) => {\n      console.log(code, reason);\n      logoutOfWeb3Modal();\n    });\n  }, [setInjectedProvider]);\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    setRoute(window.location.pathname);\n  }, [setRoute]);\n\n  let faucetHint = \"\";\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name.indexOf(\"local\") !== -1;\n\n  const [faucetClicked, setFaucetClicked] = useState(false);\n  if (\n    !faucetClicked &&\n    localProvider &&\n    localProvider._network &&\n    localProvider._network.chainId === 31337 &&\n    yourLocalBalance &&\n    ethers.utils.formatEther(yourLocalBalance) <= 0\n  ) {\n    faucetHint = (\n      <div style={{ padding: 16 }}>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            faucetTx({\n              to: address,\n              value: ethers.utils.parseEther(\"1\"),\n            });\n            setFaucetClicked(true);\n          }}\n        >\n          üí∞ Grab funds from the faucet ‚õΩÔ∏è\n        </Button>\n      </div>\n    );\n  }\n\n  const buyTokensEvents = useEventListener(readContracts, \"Vendor\", \"BuyTokens\", localProvider, 1);\n  console.log(\"üìü buyTokensEvents:\", buyTokensEvents);\n\n  const [tokenBuyAmount, setTokenBuyAmount] = useState({\n    valid: false,\n    value: ''\n  });\n  const [tokenSellAmount, setTokenSellAmount] = useState({\n    valid: false,\n    value: ''\n  });\n  const [isSellAmountApproved, setIsSellAmountApproved] = useState();\n\n  useEffect(()=>{\n    console.log(\"tokenSellAmount\",tokenSellAmount.value)\n    const tokenSellAmountBN = tokenSellAmount.valid ? ethers.utils.parseEther(\"\" + tokenSellAmount.value) : 0;\n    console.log(\"tokenSellAmountBN\",tokenSellAmountBN)\n    setIsSellAmountApproved(vendorApproval && tokenSellAmount.value && vendorApproval.gte(tokenSellAmountBN))\n  },[tokenSellAmount, readContracts])\n  console.log(\"isSellAmountApproved\",isSellAmountApproved)\n\n  const ethCostToPurchaseTokens =\n    tokenBuyAmount.valid && tokensPerEth && ethers.utils.parseEther(\"\" + tokenBuyAmount.value / parseFloat(tokensPerEth));\n  console.log(\"ethCostToPurchaseTokens:\", ethCostToPurchaseTokens);\n\n  const ethValueToSellTokens =\n    tokenSellAmount.valid && tokensPerEth && ethers.utils.parseEther(\"\" + tokenSellAmount.value / parseFloat(tokensPerEth));\n  console.log(\"ethValueToSellTokens:\", ethValueToSellTokens);\n\n  const [tokenSendToAddress, setTokenSendToAddress] = useState();\n  const [tokenSendAmount, setTokenSendAmount] = useState();\n\n  const [buying, setBuying] = useState();\n\n  let transferDisplay = \"\";\n  if (yourTokenBalance) {\n    transferDisplay = (\n      <div style={{ padding: 8, marginTop: 32, width: 420, margin: \"auto\" }}>\n        <Card title=\"Transfer tokens\">\n          <div>\n            <div style={{ padding: 8 }}>\n              <AddressInput\n                ensProvider={mainnetProvider}\n                placeholder=\"to address\"\n                value={tokenSendToAddress}\n                onChange={setTokenSendToAddress}\n              />\n            </div>\n            <div style={{ padding: 8 }}>\n              <Input\n                style={{ textAlign: \"center\" }}\n                placeholder={\"amount of tokens to send\"}\n                value={tokenSendAmount}\n                onChange={e => {\n                  setTokenSendAmount(e.target.value);\n                }}\n              />\n            </div>\n          </div>\n          <div style={{ padding: 8 }}>\n            <Button\n              type={\"primary\"}\n              onClick={() => {\n                tx(\n                  writeContracts.YourToken.transfer(tokenSendToAddress, ethers.utils.parseEther(\"\" + tokenSendAmount)),\n                );\n              }}\n            >\n              Send Tokens\n            </Button>\n          </div>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      {/* ‚úèÔ∏è Edit the header and change the title to your project name */}\n      <Header />\n      {networkDisplay}\n      <BrowserRouter>\n        <Menu style={{ textAlign: \"center\" }} selectedKeys={[route]} mode=\"horizontal\">\n          <Menu.Item key=\"/\">\n            <Link\n              onClick={() => {\n                setRoute(\"/\");\n              }}\n              to=\"/\"\n            >\n              YourToken\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"/contracts\">\n            <Link\n              onClick={() => {\n                setRoute(\"/contracts\");\n              }}\n              to=\"/contracts\"\n            >\n              Debug Contracts\n            </Link>\n          </Menu.Item>\n        </Menu>\n\n        <Switch>\n          <Route exact path=\"/\">\n            <div style={{ padding: 8, marginTop: 32, width: 300, margin: \"auto\" }}>\n              <Card title=\"Your Tokens\" extra={<a href=\"#\">code</a>}>\n                <div style={{ padding: 8 }}>\n                  <Balance balance={yourTokenBalance} fontSize={64} />\n                </div>\n              </Card>\n            </div>\n            {transferDisplay}\n            <Divider />\n            <div style={{ padding: 8, marginTop: 32, width: 300, margin: \"auto\" }}>\n              <Card title=\"Buy Tokens\" extra={<a href=\"#\">code</a>}>\n                <div style={{ padding: 8 }}>{tokensPerEth && tokensPerEth.toNumber()} tokens per ETH</div>\n                <div style={{ padding: 8 }}>\n                  <Input\n                    style={{ textAlign: \"center\" }}\n                    placeholder={\"amount of tokens to buy\"}\n                    value={tokenBuyAmount.value}\n                    onChange={e => {\n                      const newValue = e.target.value.startsWith(\".\") ? \"0.\" : e.target.value;\n                      const buyAmount = {\n                        value: newValue,\n                        valid: /^\\d*\\.?\\d+$/.test(newValue)\n                      }\n                      setTokenBuyAmount(buyAmount);\n                    }}\n                  />\n                  <Balance balance={ethCostToPurchaseTokens} dollarMultiplier={price} />\n                </div>\n\n                <div style={{ padding: 8 }}>\n                  <Button\n                    type={\"primary\"}\n                    loading={buying}\n                    onClick={async () => {\n                      setBuying(true);\n                      await tx(writeContracts.Vendor.buyTokens({ value: ethCostToPurchaseTokens }));\n                      setBuying(false);\n                    }}\n                    disabled={!tokenBuyAmount.valid}\n                  >\n                    Buy Tokens\n                  </Button>\n                </div>\n              </Card>\n            </div>\n          \n            \n            \n            {/*Extra UI for buying the tokens back from the user using \"approve\" and \"sellTokens\"\n\n            <Divider />\n            <div style={{ padding: 8, marginTop: 32, width: 300, margin: \"auto\" }}>\n              <Card title=\"Sell Tokens\">\n                <div style={{ padding: 8 }}>{tokensPerEth && tokensPerEth.toNumber()} tokens per ETH</div>\n\n                <div style={{ padding: 8 }}>\n                  <Input\n                    style={{ textAlign: \"center\" }}\n                    placeholder={\"amount of tokens to sell\"}\n                    value={tokenSellAmount.value}\n                    onChange={e => {\n                      const newValue = e.target.value.startsWith(\".\") ? \"0.\" : e.target.value;\n                      const sellAmount = {\n                        value: newValue,\n                        valid: /^\\d*\\.?\\d+$/.test(newValue)\n                      }\n                      setTokenSellAmount(sellAmount);\n                    }}\n                  />\n                  <Balance balance={ethValueToSellTokens} dollarMultiplier={price} />\n                </div>\n                {isSellAmountApproved?\n\n                  <div style={{ padding: 8 }}>\n                    <Button\n                      disabled={true}\n                      type={\"primary\"}\n                    >\n                      Approve Tokens\n                    </Button>\n                    <Button\n                      type={\"primary\"}\n                      loading={buying}\n                      onClick={async () => {\n                        setBuying(true);\n                        await tx(writeContracts.Vendor.sellTokens(tokenSellAmount.valid && ethers.utils.parseEther(tokenSellAmount.value)));\n                        setBuying(false);\n                        setTokenSellAmount(\"\");\n                      }}\n                      disabled={!tokenSellAmount.valid}\n                    >\n                      Sell Tokens\n                    </Button>\n                  </div>\n                  :\n                  <div style={{ padding: 8 }}>\n                    <Button\n                      type={\"primary\"}\n                      loading={buying}\n                      onClick={async () => {\n                        setBuying(true);\n                        await tx(writeContracts.YourToken.approve(readContracts.Vendor.address, tokenSellAmount.valid && ethers.utils.parseEther(tokenSellAmount.value)));\n                        setBuying(false);\n                        let resetAmount = tokenSellAmount\n                        setTokenSellAmount(\"\");\n                        setTimeout(()=>{\n                          setTokenSellAmount(resetAmount)\n                        },1500)\n                      }}\n                      disabled={!tokenSellAmount.valid}\n                      >\n                      Approve Tokens\n                    </Button>\n                    <Button\n                      disabled={true}\n                      type={\"primary\"}\n                    >\n                      Sell Tokens\n                    </Button>\n                  </div>\n                    }\n\n\n              </Card>\n            </div>\n            */}\n            <div style={{ padding: 8, marginTop: 32 }}>\n              <div>Vendor Token Balance:</div>\n              <Balance balance={vendorTokenBalance} fontSize={64} />\n            </div>\n\n            <div style={{ padding: 8 }}>\n              <div>Vendor ETH Balance:</div>\n              <Balance balance={vendorETHBalance} fontSize={64} /> ETH\n            </div>\n\n            <div style={{ width: 500, margin: \"auto\", marginTop: 64 }}>\n              <div>Buy Token Events:</div>\n              <List\n                dataSource={buyTokensEvents}\n                renderItem={item => {\n                  return (\n                    <List.Item key={item.blockNumber + item.blockHash}>\n                      <Address value={item.args[0]} ensProvider={mainnetProvider} fontSize={16} /> paid\n                      <Balance balance={item.args[1]} />\n                      ETH to get\n                      <Balance balance={item.args[2]} />\n                      Tokens\n                    </List.Item>\n                  );\n                }}\n              />\n            </div>\n\n            {/*\n\n                üéõ this scaffolding is full of commonly used components\n                this <Contract/> component will automatically parse your ABI\n                and give you a form to interact with it locally\n\n            <Contract\n              name=\"YourContract\"\n              signer={userSigner}\n              provider={localProvider}\n              address={address}\n              blockExplorer={blockExplorer}\n              contractConfig={contractConfig}\n            />\n            */}\n          </Route>\n          <Route path=\"/contracts\">\n            <Contract\n              name=\"Vendor\"\n              signer={userSigner}\n              provider={localProvider}\n              address={address}\n              blockExplorer={blockExplorer}\n              contractConfig={contractConfig}\n            />\n            <Contract\n              name=\"YourToken\"\n              signer={userSigner}\n              provider={localProvider}\n              address={address}\n              blockExplorer={blockExplorer}\n              contractConfig={contractConfig}\n            />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n\n      <ThemeSwitch />\n\n      {/* üë®‚Äçüíº Your account is in the top right with a wallet at connect options */}\n      <div style={{ position: \"fixed\", textAlign: \"right\", right: 0, top: 0, padding: 10 }}>\n        <Account\n          address={address}\n          localProvider={localProvider}\n          userSigner={userSigner}\n          mainnetProvider={mainnetProvider}\n          price={price}\n          web3Modal={web3Modal}\n          loadWeb3Modal={loadWeb3Modal}\n          logoutOfWeb3Modal={logoutOfWeb3Modal}\n          blockExplorer={blockExplorer}\n        />\n        {faucetHint}\n      </div>\n\n      <div style={{ marginTop: 32, opacity: 0.5 }}>\n        Created by <Address value={\"Your...address\"} ensProvider={mainnetProvider} fontSize={16} />\n      </div>\n\n      <div style={{ marginTop: 32, paddingBottom: 128, opacity: 0.5 }}>\n        <a\n          target=\"_blank\"\n          style={{ padding: 32, color: \"#000\" }}\n          href=\"https://github.com/austintgriffith/scaffold-eth\"\n        >\n          üç¥ Fork me!\n        </a>\n      </div>\n\n      {/* üó∫ Extra UI like gas price, eth price, faucet, and support: */}\n      <div style={{ position: \"fixed\", textAlign: \"left\", left: 0, bottom: 20, padding: 10 }}>\n        <Row align=\"middle\" gutter={[4, 4]}>\n          <Col span={8}>\n            <Ramp price={price} address={address} networks={NETWORKS} />\n          </Col>\n\n          <Col span={8} style={{ textAlign: \"center\", opacity: 0.8 }}>\n            <GasGauge gasPrice={gasPrice} />\n          </Col>\n          <Col span={8} style={{ textAlign: \"center\", opacity: 1 }}>\n            <Button\n              onClick={() => {\n                window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n              }}\n              size=\"large\"\n              shape=\"round\"\n            >\n              <span style={{ marginRight: 8 }} role=\"img\" aria-label=\"support\">\n                üí¨\n              </span>\n              Support\n            </Button>\n          </Col>\n        </Row>\n\n        <Row align=\"middle\" gutter={[4, 4]}>\n          <Col span={24}>\n            {\n              /*  if the local provider has a signer, let's show the faucet:  */\n              faucetAvailable ? (\n                <Faucet localProvider={localProvider} price={price} ensProvider={mainnetProvider} />\n              ) : (\n                \"\"\n              )\n            }\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}